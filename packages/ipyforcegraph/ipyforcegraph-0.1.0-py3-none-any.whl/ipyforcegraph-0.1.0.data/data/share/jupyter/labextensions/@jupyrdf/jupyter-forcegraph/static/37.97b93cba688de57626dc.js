"use strict";(self.webpackChunk_jupyrdf_jupyter_forcegraph=self.webpackChunk_jupyrdf_jupyter_forcegraph||[]).push([[37,627,840],{37:(e,t,i)=>{i.r(t),i.d(t,{BehaviorModel:()=>o,ColumnOrTemplateModel:()=>a,DataFrameSourceModel:()=>P,ForceGraph3DModel:()=>M,ForceGraph3DView:()=>j,ForceGraphModel:()=>v,ForceGraphView:()=>O,GraphImageModel:()=>C,LinkColorModel:()=>h,LinkColumnOrTemplateModel:()=>d,LinkDirectionalArrowColorModel:()=>c,LinkDirectionalArrowLengthModel:()=>u,LinkDirectionalArrowRelPosModel:()=>g,LinkDirectionalParticleColorModel:()=>p,LinkDirectionalParticleSpeedModel:()=>m,LinkDirectionalParticleWidthModel:()=>_,LinkDirectionalParticlesModel:()=>f,LinkLabelModel:()=>k,NodeColorModel:()=>b,NodeColumnOrTemplateModel:()=>l,NodeLabelModel:()=>w,NodeSelectionModel:()=>L});var n=i(840),s=i(98),r=i(503);class o extends s.WidgetModel{initialize(e,t){super.initialize(e,t),this._updateRequested=new n.Signal(this)}get updateRequested(){return this._updateRequested}}class a extends o{defaults(){return Object.assign(Object.assign(Object.assign({},super.defaults()),r.sB),{column_name:null,template:null})}getColumnName(e){return this.get("column_name")||null}get template(){return this.get("template")||null}initialize(e,t){super.initialize(e,t),this.on("change:column_name",this.onColumnNameChange,this),this.on("change:template",this.onTemplateChange,this)}async onTemplateChange(){const{template:e}=this;if(null==e)this._nunjucksTemplate=null;else{const t=await i.e(327).then(i.t.bind(i,327,23));try{this._nunjucksTemplate=new t.Template(e)}catch(e){console.warn(r.Dd,e,e.message),this._nunjucksTemplate=null}}this._updateRequested.emit(void 0)}onColumnNameChange(e){this._updateRequested.emit(void 0)}renderTemplate(e){const{_nunjucksTemplate:t}=this;if(null!=t)try{return t.render(e)}catch(e){console.warn(r.Dd,e)}}}class l extends a{getNodeAttr(e){let t=this.renderTemplate(e);if(null!=t)return t;const i=this.getColumnName(e.view);return null!=i&&(t=e.node[i]),t||null}}class d extends a{getLinkAttr(e){let t=this.renderTemplate(e);if(null!=t)return t;const i=this.getColumnName(e.view);return null!=i&&(t=e.link[i]),t||null}}class h extends d{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:h.model_name})}getLinkColor(e){return super.getLinkAttr(e)}}h.model_name="LinkColorModel";class c extends d{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:c.model_name})}getLinkDirectionalArrowColor(e){return super.getLinkAttr(e)}}c.model_name="LinkDirectionalArrowColorModel";class u extends d{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:u.model_name})}getLinkDirectionalArrowLength(e){return super.getLinkAttr(e)}}u.model_name="LinkDirectionalArrowLengthModel";class g extends d{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:g.model_name})}getLinkDirectionalArrowRelPos(e){return super.getLinkAttr(e)}}g.model_name="LinkDirectionalArrowRelPosModel";class p extends d{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:p.model_name})}getLinkDirectionalParticleColor(e){return super.getLinkAttr(e)}}p.model_name="LinkDirectionalParticleColorModel";class m extends d{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:m.model_name})}getLinkDirectionalParticleSpeed(e){return super.getLinkAttr(e)}}m.model_name="LinkDirectionalParticleSpeedModel";class _ extends d{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:_.model_name})}getLinkDirectionalParticleWidth(e){return super.getLinkAttr(e)}}_.model_name="LinkDirectionalParticleWidthModel";class f extends d{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:f.model_name})}getLinkDirectionalParticles(e){return super.getLinkAttr(e)}}f.model_name="LinkDirectionalParticlesModel";class k extends d{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:k.model_name})}getLinkLabel(e){return super.getLinkAttr(e)}}k.model_name="LinkLabelModel";class C extends o{constructor(){super(...arguments),this._framesToCapture=0,this.onBlob=async(e,t,i)=>{let n=this.frames[e];const s=new DataView(await i.arrayBuffer());if(n.set({value:s}),t){for(n of this.frames)n.save();this.set({capturing:!1}),this.save()}}}defaults(){return Object.assign(Object.assign(Object.assign({},super.defaults()),r.sB),{_model_name:C.model_name,enabled:!1,frame_count:1,frames:[]})}get frameCount(){return this.get("frame_count")}get capturing(){return this.get("capturing")}get frames(){return this.get("frames")}initialize(e,t){super.initialize(e,t),this.on("change:capturing",this.onCapturingChanged,this),this.onCapturingChanged()}onCapturingChanged(e){this._framesToCapture=this.capturing?this.frameCount:0}onRender(e){const{_framesToCapture:t}=this;if(!t)return;const{frameCount:i}=this,n=i-t;this._framesToCapture-=1;const{context2d:s,renderer3d:o}=e;let a=null;s?a=s.canvas:o&&(a=o.domElement),null!=a?a.toBlob(this.onBlob.bind(this,n,0===this._framesToCapture)):console.warn(`${r.Dd} couldn't handle post render of`,e)}}C.model_name="GraphImageModel",C.serializers=Object.assign(Object.assign({},s.WidgetModel.serializers),{frames:{deserialize:s.unpack_models}});class b extends l{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:b.model_name})}getNodeColor(e){return super.getNodeAttr(e)}}b.model_name="NodeColorModel";class w extends l{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:w.model_name})}columnName(e){let t=super.getColumnName(e);if(null==t)try{t=e.source.get("node_id_column")}catch(e){console.error("failed to fetch id column",e)}return t||null}getNodeLabel(e){return super.getNodeAttr(e)}}w.model_name="NodeLabelModel";class L extends o{constructor(){super(...arguments),this.onNodeClick=({node:e,event:t})=>{let{selected:i}=this;const n=e.id;return this.get("multiple")&&(t.ctrlKey||t.shiftKey||t.altKey)?i.has(n)?i.delete(n):i.add(n):(i.clear(),i.add(n)),this.selected=i,!0}}defaults(){return Object.assign(Object.assign(Object.assign({},super.defaults()),r.sB),{_model_name:L.model_name,selected:[],selected_color:r.QP.selected,multiple:!0})}initialize(e,t){super.initialize(e,t),this.on("change:selected",this.onValueChange,this),this.onValueChange()}onValueChange(e){this._updateRequested.emit(void 0)}get selected(){return new Set([...this.get("selected")||[]])}set selected(e){this.set({selected:[...e]}),this.save_changes()}get selectedColor(){return this.get("selected_color")||r.QP.selected}getNodeColor({node:e}){return this.selected.has(e.id)?this.selectedColor:null}}L.model_name="NodeSelectionModel",L.serializers=Object.assign(Object.assign({},s.WidgetModel.serializers),{value:{deserialize:s.unpack_models}});var D=i(526);class v extends s.DOMWidgetModel{defaults(){return Object.assign(Object.assign(Object.assign({},super.defaults()),r.sB),{_model_name:v.model_name,_view_name:O.view_name,source:null,behaviors:[],default_node_color:r.QP.node,default_link_color:r.QP.link})}initialize(e,t){super.initialize(e,t),this.on("change:behaviors",this.onBehaviorsChange,this),this.onBehaviorsChange()}onBehaviorsChange(){this._behaviorsChanged||(this._behaviorsChanged=new n.Signal(this),this._linkBehaviorsByMethod=new Map,this._nodeBehaviorsByMethod=new Map);const{behaviors:e}=this;for(let t of r.wN){let i=[];for(const n of e)n[t]&&i.push(n);this._linkBehaviorsByMethod.set(t,i)}for(let t of r.l_){let i=[];for(const n of e)n[t]&&i.push(n);this._nodeBehaviorsByMethod.set(t,i)}this._behaviorsChanged.emit(void 0)}linkBehaviorsForMethod(e){return this._linkBehaviorsByMethod.get(e)||r.ow}nodeBehaviorsForMethod(e){return this._nodeBehaviorsByMethod.get(e)||r.ow}get graphData(){const e=this.get("source");return e?e.graphData:r.tM}get behaviors(){return this.get("behaviors")||[]}get behaviorsChanged(){return this._behaviorsChanged}get previousBehaviors(){return this.previous&&this.previous("behaviors")||[]}get defaultNodeColor(){return this.get("default_node_color")||r.QP.node}get defaultLinkColor(){return this.get("default_link_color")||r.QP.link}}v.model_name="ForceGraphModel",v.serializers=Object.assign(Object.assign({},s.DOMWidgetModel.serializers),{source:{deserialize:s.unpack_models},behaviors:{deserialize:s.unpack_models}});class O extends s.DOMWidgetView{constructor(){super(...arguments),this.onFrameLoaded=async e=>{const t=e.currentTarget,{contentWindow:i}=t,n=i.init();this.graph=n,i.addEventListener("resize",this.onWindowResize),this._rendered.resolve(void 0),await this.update()},this.onWindowResize=()=>{const{contentWindow:e}=this._iframe,t=this.graph;t.width(e.innerWidth),t.height(e.innerHeight)},this.getLinkColor=e=>this.getComposedLinkAttr(e,"getLinkColor",this.model.defaultLinkColor),this.getLinkLabel=e=>this.getComposedLinkAttr(e,"getLinkLabel",""),this.getLinkDirectionalArrowColor=e=>this.getComposedLinkAttr(e,"getLinkDirectionalArrowColor",""),this.getLinkDirectionalArrowLength=e=>this.castToNumber(this.getComposedLinkAttr(e,"getLinkDirectionalArrowLength","")),this.getLinkDirectionalArrowRelPos=e=>this.castToNumber(this.getComposedLinkAttr(e,"getLinkDirectionalArrowRelPos","")),this.getLinkDirectionalParticleColor=e=>this.getComposedLinkAttr(e,"getLinkDirectionalParticleColor",""),this.getLinkDirectionalParticleSpeed=e=>this.castToNumber(this.getComposedLinkAttr(e,"getLinkDirectionalParticleSpeed","")),this.getLinkDirectionalParticleWidth=e=>this.castToNumber(this.getComposedLinkAttr(e,"getLinkDirectionalParticleWidth","")),this.getLinkDirectionalParticles=e=>this.castToNumber(this.getComposedLinkAttr(e,"getLinkDirectionalParticles","")),this.getNodeColor=e=>this.getComposedNodeAttr(e,"getNodeColor",this.model.defaultNodeColor),this.getNodeLabel=e=>this.getComposedNodeAttr(e,"getNodeLabel",""),this.onNodeClick=(e,t)=>{const{behaviors:i}=this.model;let n=!0;const s={view:this,graphData:this.graph.graphData(),event:t,node:e};for(const e of i)if(e.onNodeClick&&(n=e.onNodeClick(s),!n))return},this.onRender=(e,t)=>{const{behaviors:i}=this.model;let n={view:this,graphData:this.graph.graphData(),context2d:e,globalScale:t};n=this.updateRenderOptions(n);for(const e of i)e.onRender&&e.onRender(n)}}get source(){return this.model.get("source")}get previousSource(){return this.model.previous&&this.model.previous("source")||null}get rendered(){return this._rendered.promise}initialize(e){super.initialize(e),this.luminoWidget.addClass(r.ux.widget),this.luminoWidget.addClass(`${r.ux.widget}-${this.graphJsClass}`),this._rendered=new D.PromiseDelegate,this.model.on("change:source",this.onSourceChange,this),this.model.behaviorsChanged.connect(this.onBehaviorsChange,this),this.luminoWidget.disposed.connect(this.onDisposed,this),this.onSourceChange(),this.onBehaviorsChange()}onDisposed(){this.graph&&(this.graph._destructor(),delete this.graph,this.graph=null),this._iframe&&(this._iframe.removeEventListener("resize",this.onWindowResize),this._iframe.onload=null,delete this._iframe,this._iframe=null),this.luminoWidget.disposed.disconnect(this.onDisposed)}async render(){const e=this.el,t=document.createElement("iframe"),i=await this.getIframeSource();t.setAttribute("srcdoc",i),t.onload=this.onFrameLoaded,e.appendChild(t),this._iframe=t}async getJsUrl(){return(await i.e(460).then(i.bind(i,460))).default}get graphJsClass(){return"ForceGraph"}async getIframeSource(){return`\n      <head>\n        <script src="${await this.getJsUrl()}"><\/script>\n        <style>\n          body, #main {\n            overflow: hidden;\n            position: absolute;\n            left: 0;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            margin: 0;\n            padding: 0;\n          }\n        </style>\n      </head>\n      <body>\n        <script>\n          window.init = (args) => {\n            const div = document.createElement('div');\n            document.body.appendChild(div);\n            return ${this.graphJsClass}(args || {})(div);\n          }\n          window.wrapFunction = (fn) => {\n            return (...args) => fn(...args);\n          }\n        <\/script>\n      </body>\n    `}async update(){await this._rendered.promise;let{graphData:e}=this.model;r.eM&&console.warn(`${r.Dd} updating...`,e),this.graph.graphData(e),await this.postUpdate()}wrapFunction(e){return this._iframe.contentWindow.wrapFunction(e)}onSourceChange(e){const{source:t,previousSource:i}=this;i&&i.dataUpdated.disconnect(this.update,this),t&&(t.dataUpdated.connect(this.update,this),this.update())}async postUpdate(){await this.rendered;const e=this.graph;e?(e.linkColor(this.wrapFunction(this.getLinkColor)),e.linkLabel(this.wrapFunction(this.getLinkLabel)),e.linkDirectionalArrowColor(this.wrapFunction(this.getLinkDirectionalArrowColor)),e.linkDirectionalArrowLength(this.wrapFunction(this.getLinkDirectionalArrowLength)),e.linkDirectionalArrowRelPos(this.wrapFunction(this.getLinkDirectionalArrowRelPos)),e.linkDirectionalParticleColor(this.wrapFunction(this.getLinkDirectionalParticleColor)),e.linkDirectionalParticleSpeed(this.wrapFunction(this.getLinkDirectionalParticleSpeed)),e.linkDirectionalParticleWidth(this.wrapFunction(this.getLinkDirectionalParticleWidth)),e.linkDirectionalParticles(this.wrapFunction(this.getLinkDirectionalParticles)),e.nodeColor(this.wrapFunction(this.getNodeColor)),e.nodeLabel(this.wrapFunction(this.getNodeLabel)),e.onNodeClick(this.wrapFunction(this.onNodeClick)),this.getOnRenderPostUpdate()):console.warn(`${r.Dd} no graph to postUpdate`)}getOnRenderPostUpdate(){this.graph.onRenderFramePost(this.wrapFunction(this.onRender))}async onBehaviorsChange(){const{behaviors:e,previousBehaviors:t}=this.model;for(const i of t)e.includes(i)||i.updateRequested.disconnect(this.postUpdate,this);for(const i of e)t.includes(i)||i.updateRequested.connect(this.postUpdate,this);await this.update()}castToNumber(e){return null==e?e:"string"==typeof e?parseFloat(e):e}getComposedLinkAttr(e,t,i){let n;const s={view:this,graphData:this.graph.graphData(),link:e};for(const e of this.model.linkBehaviorsForMethod(t))if(n=e[t].call(e,s),null!=n)break;return null!=n?n:i}getComposedNodeAttr(e,t,i){let n;const s={view:this,graphData:this.graph.graphData(),node:e};for(const e of this.model.nodeBehaviorsForMethod(t))if(n=e[t].call(e,s),null!=n)break;return null!=n?n:i}updateRenderOptions(e){return e}}O.view_name="ForceGraphView";class M extends v{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:M.model_name,_view_name:j.view_name})}}M.model_name="ForceGraph3DModel",M.serializers=Object.assign({},v.serializers);class j extends O{get graphJsClass(){return"ForceGraph3D"}async getJsUrl(){return(await i.e(65).then(i.bind(i,65))).default}get threeRenderer(){return this.graph.renderer()}getOnRenderPostUpdate(){this.threeRenderer.setAnimationLoop(this.wrapFunction(this.onRender))}updateRenderOptions(e){return delete e.context2d,delete e.globalScale,e.renderer3d=this.threeRenderer,e}}j.view_name="ForceGraph3DView";var A=i(627);class P extends s.WidgetModel{constructor(){super(...arguments),this._dataUpdated=new n.Signal(this),this._graphData=null,this._graphDataRequested=!1}defaults(){return Object.assign(Object.assign(Object.assign({},super.defaults()),r.sB),{_model_name:P.model_name,nodes:null,links:null,node_id_column:r.vJ.id,link_source_column:r.vJ.source,link_target_column:r.vJ.target})}initialize(e,t){super.initialize(e,t),this.on("change:nodes",this.graphUpdate,this),this.on("change:links",this.graphUpdate,this)}get dataUpdated(){return this._dataUpdated}get nodeIdColumn(){return this.get("node_id_column")||r.vJ.id}get linkSourceColumn(){return this.get("link_source_column")||r.vJ.source}get linkTargetColumn(){return this.get("link_target_column")||r.vJ.target}get nodes(){return this.get("nodes")||r.ow}get links(){return this.get("links")||r.ow}get graphData(){return this._graphDataRequested||(this.graphUpdate(),this._graphDataRequested=!0),this._graphData||r.tM}set graphData(e){this._graphData=e,this._dataUpdated.emit(void 0)}graphUpdate(){const e={nodes:[],links:[]},{nodes:t,links:i,nodeIdColumn:n,linkSourceColumn:s,linkTargetColumn:o}=this,a=Object.keys(t),l=Object.keys(i),d=(t[n]||r.ow).length,h=(i[s]||r.ow).length,c=null!=t[n];for(let i=0;i<d;i++){let s={id:c?t[n][i]:i};for(const e of a)s[e]=t[e][i];e.nodes.push(s)}for(let t=0;t<h;t++){let n={source:i[s][t],target:i[o][t]};for(const e of l)n[e]=i[e][t];e.links.push(n)}this.graphData=e}}P.model_name="DataFrameSourceModel",P.serializers=Object.assign(Object.assign({},s.WidgetModel.serializers),{nodes:{deserialize:A.jsonToDataFrame},links:{deserialize:A.jsonToDataFrame}})},627:(e,t,i)=>{i.r(t),i.d(t,{dataFrameToJson:()=>a,dataframe_serialization:()=>l,initializeZstd:()=>d,jsonToDataFrame:()=>o});var n=i(915),s=i(42),r=i(503);function o(e,t){const i=(0,n.decompress)(s.Buffer.from(e.buffer.buffer));return JSON.parse(s.Buffer.prototype.toString.call(i,"utf8"))}function a(e,t){return console.warn(n.compress),null===e?null:{buffer:null}}const l={deserialize:o,serialize:a};async function d(){await(0,n.init)(),r.eM&&console.warn(`${r.Dd} zstd loaded`)}}}]);
//# sourceMappingURL=37.97b93cba688de57626dc.js.map?v=97b93cba688de57626dc