# Generated by Django 4.0.4 on 2022-05-26 10:39

import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('extras', '0073_journalentry_tags_custom_fields'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('name', models.CharField(max_length=250, unique=False)),

                ('firstname', models.CharField(max_length=250, blank=True)),
                ('lastname', models.CharField(max_length=250, blank=True)),
                ('status', models.CharField(max_length=250, unique=False, blank=True, default='enabled')),
                ('sAMAccountName', models.CharField(max_length=250, unique=True, blank=False)),
                ('ad_guid', models.CharField(max_length=250, blank=True)),
                ('vpnIPaddress', models.CharField(max_length=250, blank=True)),
                ('ad_description', models.CharField(max_length=250, blank=True)),
                ('position', models.CharField(max_length=250, blank=True)),
                ('department', models.CharField(max_length=250, blank=True)),
                ('comment', models.CharField(max_length=250, blank=True)),

                ('description', models.CharField(blank=True, max_length=500)),
                ('comments', models.TextField(blank=True)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RiskRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('CN', models.CharField(max_length=250, unique=True)),
                ('DistinguishedName', models.CharField(max_length=500, unique=True)),
                ('ad_guid', models.CharField(max_length=250, unique=True)),
                ('ad_description', models.CharField(max_length=500, unique=True)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RiskAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('object_id', models.PositiveBigIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('relation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='risk_assignments', to='users_and_computers.riskrelation')),
                ('risk', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='risk_assignments', to='users_and_computers.risk')),
            ],
            options={
                'ordering': ['risk'],
                'unique_together': {('content_type', 'object_id', 'risk', 'relation')},
            },
        ),
    ]
