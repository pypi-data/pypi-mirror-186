from _typeshed import Incomplete
from swimlane.core.fields.base import CursorField as CursorField, FieldCursor as FieldCursor
from swimlane.core.resources.record import Record as Record
from swimlane.exceptions import SwimlaneHTTP400Error as SwimlaneHTTP400Error, ValidationError as ValidationError

logger: Incomplete

class ReferenceCursor(FieldCursor):
    def __init__(self, *args, **kwargs) -> None: ...
    @property
    def target_app(self): ...
    def add(self, record) -> None: ...
    def remove(self, record) -> None: ...

class ReferenceField(CursorField):
    field_type: str
    supported_types: Incomplete
    cursor_class: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    @property
    def target_app(self): ...
    def validate_value(self, value) -> None: ...
    def set_swimlane(self, value): ...
    def set_python(self, value) -> None: ...
    def get_swimlane(self): ...
    def get_item(self): ...
    def get_batch_representation(self): ...
    def cast_to_report(self, value): ...
    def for_json(self): ...
