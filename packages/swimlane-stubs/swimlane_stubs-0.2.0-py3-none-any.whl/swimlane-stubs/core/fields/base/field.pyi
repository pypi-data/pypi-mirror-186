from _typeshed import Incomplete
from swimlane.core.resolver import SwimlaneResolver as SwimlaneResolver
from swimlane.exceptions import ValidationError as ValidationError

class Field(SwimlaneResolver):
    field_type: Incomplete
    supported_types: Incomplete
    bulk_modify_support: bool
    name: Incomplete
    field_definition: Incomplete
    key: Incomplete
    id: Incomplete
    input_type: Incomplete
    required: Incomplete
    readonly: Incomplete
    multiselect: Incomplete
    def __init__(self, name, record) -> None: ...
    @property
    def record(self): ...
    def get_item(self): ...
    def get_python(self): ...
    def get_batch_representation(self): ...
    def get_swimlane(self): ...
    def get_report(self, value): ...
    def get_bulk_modify(self, value): ...
    def cast_to_python(self, value): ...
    def cast_to_swimlane(self, value): ...
    def cast_to_report(self, value): ...
    def cast_to_bulk_modify(self, value): ...
    def validate_value(self, value) -> None: ...
    def set_python(self, value): ...
    def set_swimlane(self, value): ...
    def for_json(self): ...
