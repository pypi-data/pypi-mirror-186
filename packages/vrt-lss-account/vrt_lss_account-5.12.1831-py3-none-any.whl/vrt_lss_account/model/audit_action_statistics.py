# coding: utf-8

"""
    VRt.Account [AC]

    # Description  Veeroute Account Panel.  ## Entity relationship diagram  ![erd](../uml/account.svg)  # noqa: E501

    The version of the OpenAPI document: 5.12.1831
    Contact: servicedesk@veeroute.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from vrt_lss_account import schemas  # noqa: F401


class AuditActionStatistics(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Detail user action statistics.

    """


    class MetaOapg:
        
        class properties:
            
            
            class points_count(
                schemas.Int32Schema
            ):
            
            
                class MetaOapg:
                    format = 'int32'
                    inclusive_maximum = 10000000
                    inclusive_minimum = 0
        
            @staticmethod
            def duration() -> typing.Type['TimeDuration']:
                return TimeDuration
            __annotations__ = {
                "points_count": points_count,
                "duration": duration,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["points_count"]) -> MetaOapg.properties.points_count: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["duration"]) -> 'TimeDuration': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["points_count"], typing_extensions.Literal["duration"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["points_count"]) -> typing.Union[MetaOapg.properties.points_count, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["duration"]) -> typing.Union['TimeDuration', schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["points_count"], typing_extensions.Literal["duration"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        points_count: typing.Union[MetaOapg.properties.points_count, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        duration: typing.Union['TimeDuration', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AuditActionStatistics':
        return super().__new__(
            cls,
            *args,
            points_count=points_count,
            duration=duration,
            _configuration=_configuration,
        )

from vrt_lss_account.model.time_duration import TimeDuration
