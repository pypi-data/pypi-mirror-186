# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

# import aa_service_pb2 as aa__service__pb2
from . import aa_service_pb2 as aa__service__pb2


class AdminApiServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetInventoryHierarchical = channel.unary_unary(
                '/aa_service.v1.AdminApiService/GetInventoryHierarchical',
                request_serializer=aa__service__pb2.GetInventoryHierarchicalRequest.SerializeToString,
                response_deserializer=aa__service__pb2.GetInventoryHierarchicalResponse.FromString,
                )
        self.GetInventoryFlat = channel.unary_unary(
                '/aa_service.v1.AdminApiService/GetInventoryFlat',
                request_serializer=aa__service__pb2.GetInventoryFlatRequest.SerializeToString,
                response_deserializer=aa__service__pb2.GetInventoryFlatResponse.FromString,
                )
        self.UpdateColumnLockStatus = channel.unary_unary(
                '/aa_service.v1.AdminApiService/UpdateColumnLockStatus',
                request_serializer=aa__service__pb2.UpdateColumnLockStatusRequest.SerializeToString,
                response_deserializer=aa__service__pb2.UpdateColumnLockStatusResponse.FromString,
                )
        self.UpdateColumnDataLabel = channel.unary_unary(
                '/aa_service.v1.AdminApiService/UpdateColumnDataLabel',
                request_serializer=aa__service__pb2.UpdateColumnDataLabelRequest.SerializeToString,
                response_deserializer=aa__service__pb2.UpdateColumnDataLabelResponse.FromString,
                )
        self.CreateInventoryObject = channel.unary_unary(
                '/aa_service.v1.AdminApiService/CreateInventoryObject',
                request_serializer=aa__service__pb2.CreateInventoryObjectRequest.SerializeToString,
                response_deserializer=aa__service__pb2.CreateInventoryObjectResponse.FromString,
                )
        self.DeleteInventoryObject = channel.unary_unary(
                '/aa_service.v1.AdminApiService/DeleteInventoryObject',
                request_serializer=aa__service__pb2.DeleteInventoryObjectRequest.SerializeToString,
                response_deserializer=aa__service__pb2.DeleteInventoryObjectResponse.FromString,
                )
        self.CreateInventoryTag = channel.unary_unary(
                '/aa_service.v1.AdminApiService/CreateInventoryTag',
                request_serializer=aa__service__pb2.CreateInventoryTagRequest.SerializeToString,
                response_deserializer=aa__service__pb2.CreateInventoryTagResponse.FromString,
                )
        self.GetInventoryTags = channel.unary_unary(
                '/aa_service.v1.AdminApiService/GetInventoryTags',
                request_serializer=aa__service__pb2.GetInventoryTagsRequest.SerializeToString,
                response_deserializer=aa__service__pb2.GetInventoryTagsResponse.FromString,
                )
        self.UpdateInventoryObjectTags = channel.unary_unary(
                '/aa_service.v1.AdminApiService/UpdateInventoryObjectTags',
                request_serializer=aa__service__pb2.UpdateInventoryObjectTagsRequest.SerializeToString,
                response_deserializer=aa__service__pb2.UpdateInventoryObjectTagsResponse.FromString,
                )
        self.DeleteInventoryTag = channel.unary_unary(
                '/aa_service.v1.AdminApiService/DeleteInventoryTag',
                request_serializer=aa__service__pb2.DeleteInventoryTagRequest.SerializeToString,
                response_deserializer=aa__service__pb2.DeleteInventoryTagResponse.FromString,
                )


class AdminApiServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetInventoryHierarchical(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInventoryFlat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateColumnLockStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateColumnDataLabel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateInventoryObject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteInventoryObject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateInventoryTag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInventoryTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateInventoryObjectTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteInventoryTag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminApiServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetInventoryHierarchical': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInventoryHierarchical,
                    request_deserializer=aa__service__pb2.GetInventoryHierarchicalRequest.FromString,
                    response_serializer=aa__service__pb2.GetInventoryHierarchicalResponse.SerializeToString,
            ),
            'GetInventoryFlat': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInventoryFlat,
                    request_deserializer=aa__service__pb2.GetInventoryFlatRequest.FromString,
                    response_serializer=aa__service__pb2.GetInventoryFlatResponse.SerializeToString,
            ),
            'UpdateColumnLockStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateColumnLockStatus,
                    request_deserializer=aa__service__pb2.UpdateColumnLockStatusRequest.FromString,
                    response_serializer=aa__service__pb2.UpdateColumnLockStatusResponse.SerializeToString,
            ),
            'UpdateColumnDataLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateColumnDataLabel,
                    request_deserializer=aa__service__pb2.UpdateColumnDataLabelRequest.FromString,
                    response_serializer=aa__service__pb2.UpdateColumnDataLabelResponse.SerializeToString,
            ),
            'CreateInventoryObject': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInventoryObject,
                    request_deserializer=aa__service__pb2.CreateInventoryObjectRequest.FromString,
                    response_serializer=aa__service__pb2.CreateInventoryObjectResponse.SerializeToString,
            ),
            'DeleteInventoryObject': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteInventoryObject,
                    request_deserializer=aa__service__pb2.DeleteInventoryObjectRequest.FromString,
                    response_serializer=aa__service__pb2.DeleteInventoryObjectResponse.SerializeToString,
            ),
            'CreateInventoryTag': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInventoryTag,
                    request_deserializer=aa__service__pb2.CreateInventoryTagRequest.FromString,
                    response_serializer=aa__service__pb2.CreateInventoryTagResponse.SerializeToString,
            ),
            'GetInventoryTags': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInventoryTags,
                    request_deserializer=aa__service__pb2.GetInventoryTagsRequest.FromString,
                    response_serializer=aa__service__pb2.GetInventoryTagsResponse.SerializeToString,
            ),
            'UpdateInventoryObjectTags': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateInventoryObjectTags,
                    request_deserializer=aa__service__pb2.UpdateInventoryObjectTagsRequest.FromString,
                    response_serializer=aa__service__pb2.UpdateInventoryObjectTagsResponse.SerializeToString,
            ),
            'DeleteInventoryTag': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteInventoryTag,
                    request_deserializer=aa__service__pb2.DeleteInventoryTagRequest.FromString,
                    response_serializer=aa__service__pb2.DeleteInventoryTagResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'aa_service.v1.AdminApiService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AdminApiService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetInventoryHierarchical(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aa_service.v1.AdminApiService/GetInventoryHierarchical',
            aa__service__pb2.GetInventoryHierarchicalRequest.SerializeToString,
            aa__service__pb2.GetInventoryHierarchicalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInventoryFlat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aa_service.v1.AdminApiService/GetInventoryFlat',
            aa__service__pb2.GetInventoryFlatRequest.SerializeToString,
            aa__service__pb2.GetInventoryFlatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateColumnLockStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aa_service.v1.AdminApiService/UpdateColumnLockStatus',
            aa__service__pb2.UpdateColumnLockStatusRequest.SerializeToString,
            aa__service__pb2.UpdateColumnLockStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateColumnDataLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aa_service.v1.AdminApiService/UpdateColumnDataLabel',
            aa__service__pb2.UpdateColumnDataLabelRequest.SerializeToString,
            aa__service__pb2.UpdateColumnDataLabelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateInventoryObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aa_service.v1.AdminApiService/CreateInventoryObject',
            aa__service__pb2.CreateInventoryObjectRequest.SerializeToString,
            aa__service__pb2.CreateInventoryObjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteInventoryObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aa_service.v1.AdminApiService/DeleteInventoryObject',
            aa__service__pb2.DeleteInventoryObjectRequest.SerializeToString,
            aa__service__pb2.DeleteInventoryObjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateInventoryTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aa_service.v1.AdminApiService/CreateInventoryTag',
            aa__service__pb2.CreateInventoryTagRequest.SerializeToString,
            aa__service__pb2.CreateInventoryTagResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInventoryTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aa_service.v1.AdminApiService/GetInventoryTags',
            aa__service__pb2.GetInventoryTagsRequest.SerializeToString,
            aa__service__pb2.GetInventoryTagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateInventoryObjectTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aa_service.v1.AdminApiService/UpdateInventoryObjectTags',
            aa__service__pb2.UpdateInventoryObjectTagsRequest.SerializeToString,
            aa__service__pb2.UpdateInventoryObjectTagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteInventoryTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aa_service.v1.AdminApiService/DeleteInventoryTag',
            aa__service__pb2.DeleteInventoryTagRequest.SerializeToString,
            aa__service__pb2.DeleteInventoryTagResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
