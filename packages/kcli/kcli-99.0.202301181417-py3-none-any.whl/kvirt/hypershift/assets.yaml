{% set api_address = api_ip|default("api." + cluster + "." + original_domain) %}
apiVersion: v1
data:
 .dockerconfigjson: {{ pull_secret|default('')|base64 }}
kind: Secret
metadata:
  name: {{ cluster }}-pull-secret
  namespace: {{ namespace }}
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ cluster }}-ssh-key
  namespace: {{ namespace }}
stringData:
  id_rsa.pub: {{ pub_key|default('') }}
---
apiVersion: hypershift.openshift.io/v1beta1
kind: HostedCluster
metadata:
  name: {{ cluster }}
  namespace: {{ namespace }}
spec:
  release:
    image: "{{ release_image|default('') }}"
  dns:
    baseDomain: {{ domain }}
  etcd:
    managed:
      storage:
        persistentVolume:
          size: {{ etcd_size }}Gi
        restoreSnapshotURL: null
        type: PersistentVolume
    managementType: Managed
  pullSecret:
    name: {{ cluster }}-pull-secret
  sshKey:
    name: {{ cluster }}-ssh-key
  fips: {{ fips }}
  networking:
    clusterNetwork:
    - cidr: {{ cluster_network_ipv4 }}
      hostPrefix: 23
    serviceNetwork:
    - cidr: {{ service_network_ipv4 }}
    machineNetwork:
    - cidr: {{ cidr|default('') }}
    networkType: {{ network_type }}
  platform:
    type: None
  infraID: {{ cluster }}
  dns:
    baseDomain: {{ domain }}
  services:
  - service: APIServer
    servicePublishingStrategy:
      nodePort:
        address: {{ api_address }}
      type: NodePort
  - service: OAuthServer
    servicePublishingStrategy:
      nodePort:
        address: {{ api_address }}
      type: NodePort
  - service: OIDC
    servicePublishingStrategy:
      nodePort:
        address: {{ api_address }}
      type: None
  - service: Konnectivity
    servicePublishingStrategy:
      nodePort:
        address: {{ api_address }}
      type: NodePort
  - service: Ignition
    servicePublishingStrategy:
      nodePort:
        address: {{ api_address }}
      type: NodePort
{% if network_type == 'OVNKubernetes' %}
  - service: OVNSbDb
    servicePublishingStrategy:
{% if ovn_nodeport|default(False) %}
      nodePort:
        address: {{ api_address }}
      type: NodePort
{% else %}
      type: Route
{% endif %}
{% endif %}
{% if ca is defined %}
  additionalTrustBundle: disconnected-ca
{% endif %}
{% if imagecontentsources|default([]) %}
  imageContentSources:
{% for entry in imagecontentsources %}
  - mirrors:
    - {{ entry['mirror'] }}
    source: {{ entry['source'] }}
{% endfor %}
{% endif %}
---
{% if ca is defined %}
apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: disconnected-ca
  namespace: {{ namespace }}
data:
  config: |
    {{ ca | certificate | replace('\n', '\n ') }}
---
{% endif %}
{% if manifests|default([]) %}
{% for entry in manifests %}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ entry['name'] }}
  namespace: {{ namespace }}
data:
  config: '{{ entry["data"] }}'
---
{% endfor %}
{% endif %}
apiVersion: hypershift.openshift.io/v1beta1
kind: NodePool
metadata:
  name: {{ cluster }}
  namespace: {{ namespace }}
spec:
  clusterName: {{ cluster }}
  replicas: 0
  management:
    autoRepair: false
    upgradeType: InPlace
  platform:
    type: None
  release:
    image: "{{ release_image|default('') }}"
{% if manifests|default([]) %}
  config:
{% for entry in manifests %}
  - name: {{ entry['name'] }}
{% endfor %}
{% endif %}
status:
  conditions: null
  replicas: 0
