# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import wcf_pb2 as wcf__pb2


class WcfStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RpcIsLogin = channel.unary_unary(
                '/wcf.Wcf/RpcIsLogin',
                request_serializer=wcf__pb2.Empty.SerializeToString,
                response_deserializer=wcf__pb2.Response.FromString,
                )
        self.RpcGetSelfWxid = channel.unary_unary(
                '/wcf.Wcf/RpcGetSelfWxid',
                request_serializer=wcf__pb2.Empty.SerializeToString,
                response_deserializer=wcf__pb2.String.FromString,
                )
        self.RpcEnableRecvMsg = channel.unary_stream(
                '/wcf.Wcf/RpcEnableRecvMsg',
                request_serializer=wcf__pb2.Empty.SerializeToString,
                response_deserializer=wcf__pb2.WxMsg.FromString,
                )
        self.RpcDisableRecvMsg = channel.unary_unary(
                '/wcf.Wcf/RpcDisableRecvMsg',
                request_serializer=wcf__pb2.Empty.SerializeToString,
                response_deserializer=wcf__pb2.Response.FromString,
                )
        self.RpcSendTextMsg = channel.unary_unary(
                '/wcf.Wcf/RpcSendTextMsg',
                request_serializer=wcf__pb2.TextMsg.SerializeToString,
                response_deserializer=wcf__pb2.Response.FromString,
                )
        self.RpcSendImageMsg = channel.unary_unary(
                '/wcf.Wcf/RpcSendImageMsg',
                request_serializer=wcf__pb2.ImageMsg.SerializeToString,
                response_deserializer=wcf__pb2.Response.FromString,
                )
        self.RpcGetMsgTypes = channel.unary_unary(
                '/wcf.Wcf/RpcGetMsgTypes',
                request_serializer=wcf__pb2.Empty.SerializeToString,
                response_deserializer=wcf__pb2.MsgTypes.FromString,
                )
        self.RpcGetContacts = channel.unary_unary(
                '/wcf.Wcf/RpcGetContacts',
                request_serializer=wcf__pb2.Empty.SerializeToString,
                response_deserializer=wcf__pb2.Contacts.FromString,
                )
        self.RpcGetDbNames = channel.unary_unary(
                '/wcf.Wcf/RpcGetDbNames',
                request_serializer=wcf__pb2.Empty.SerializeToString,
                response_deserializer=wcf__pb2.DbNames.FromString,
                )
        self.RpcGetDbTables = channel.unary_unary(
                '/wcf.Wcf/RpcGetDbTables',
                request_serializer=wcf__pb2.String.SerializeToString,
                response_deserializer=wcf__pb2.DbTables.FromString,
                )
        self.RpcExecDbQuery = channel.unary_unary(
                '/wcf.Wcf/RpcExecDbQuery',
                request_serializer=wcf__pb2.DbQuery.SerializeToString,
                response_deserializer=wcf__pb2.DbRows.FromString,
                )
        self.RpcAcceptNewFriend = channel.unary_unary(
                '/wcf.Wcf/RpcAcceptNewFriend',
                request_serializer=wcf__pb2.Verification.SerializeToString,
                response_deserializer=wcf__pb2.Response.FromString,
                )


class WcfServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RpcIsLogin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RpcGetSelfWxid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RpcEnableRecvMsg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RpcDisableRecvMsg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RpcSendTextMsg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RpcSendImageMsg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RpcGetMsgTypes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RpcGetContacts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RpcGetDbNames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RpcGetDbTables(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RpcExecDbQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RpcAcceptNewFriend(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WcfServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RpcIsLogin': grpc.unary_unary_rpc_method_handler(
                    servicer.RpcIsLogin,
                    request_deserializer=wcf__pb2.Empty.FromString,
                    response_serializer=wcf__pb2.Response.SerializeToString,
            ),
            'RpcGetSelfWxid': grpc.unary_unary_rpc_method_handler(
                    servicer.RpcGetSelfWxid,
                    request_deserializer=wcf__pb2.Empty.FromString,
                    response_serializer=wcf__pb2.String.SerializeToString,
            ),
            'RpcEnableRecvMsg': grpc.unary_stream_rpc_method_handler(
                    servicer.RpcEnableRecvMsg,
                    request_deserializer=wcf__pb2.Empty.FromString,
                    response_serializer=wcf__pb2.WxMsg.SerializeToString,
            ),
            'RpcDisableRecvMsg': grpc.unary_unary_rpc_method_handler(
                    servicer.RpcDisableRecvMsg,
                    request_deserializer=wcf__pb2.Empty.FromString,
                    response_serializer=wcf__pb2.Response.SerializeToString,
            ),
            'RpcSendTextMsg': grpc.unary_unary_rpc_method_handler(
                    servicer.RpcSendTextMsg,
                    request_deserializer=wcf__pb2.TextMsg.FromString,
                    response_serializer=wcf__pb2.Response.SerializeToString,
            ),
            'RpcSendImageMsg': grpc.unary_unary_rpc_method_handler(
                    servicer.RpcSendImageMsg,
                    request_deserializer=wcf__pb2.ImageMsg.FromString,
                    response_serializer=wcf__pb2.Response.SerializeToString,
            ),
            'RpcGetMsgTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.RpcGetMsgTypes,
                    request_deserializer=wcf__pb2.Empty.FromString,
                    response_serializer=wcf__pb2.MsgTypes.SerializeToString,
            ),
            'RpcGetContacts': grpc.unary_unary_rpc_method_handler(
                    servicer.RpcGetContacts,
                    request_deserializer=wcf__pb2.Empty.FromString,
                    response_serializer=wcf__pb2.Contacts.SerializeToString,
            ),
            'RpcGetDbNames': grpc.unary_unary_rpc_method_handler(
                    servicer.RpcGetDbNames,
                    request_deserializer=wcf__pb2.Empty.FromString,
                    response_serializer=wcf__pb2.DbNames.SerializeToString,
            ),
            'RpcGetDbTables': grpc.unary_unary_rpc_method_handler(
                    servicer.RpcGetDbTables,
                    request_deserializer=wcf__pb2.String.FromString,
                    response_serializer=wcf__pb2.DbTables.SerializeToString,
            ),
            'RpcExecDbQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.RpcExecDbQuery,
                    request_deserializer=wcf__pb2.DbQuery.FromString,
                    response_serializer=wcf__pb2.DbRows.SerializeToString,
            ),
            'RpcAcceptNewFriend': grpc.unary_unary_rpc_method_handler(
                    servicer.RpcAcceptNewFriend,
                    request_deserializer=wcf__pb2.Verification.FromString,
                    response_serializer=wcf__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'wcf.Wcf', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Wcf(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RpcIsLogin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wcf.Wcf/RpcIsLogin',
            wcf__pb2.Empty.SerializeToString,
            wcf__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RpcGetSelfWxid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wcf.Wcf/RpcGetSelfWxid',
            wcf__pb2.Empty.SerializeToString,
            wcf__pb2.String.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RpcEnableRecvMsg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/wcf.Wcf/RpcEnableRecvMsg',
            wcf__pb2.Empty.SerializeToString,
            wcf__pb2.WxMsg.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RpcDisableRecvMsg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wcf.Wcf/RpcDisableRecvMsg',
            wcf__pb2.Empty.SerializeToString,
            wcf__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RpcSendTextMsg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wcf.Wcf/RpcSendTextMsg',
            wcf__pb2.TextMsg.SerializeToString,
            wcf__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RpcSendImageMsg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wcf.Wcf/RpcSendImageMsg',
            wcf__pb2.ImageMsg.SerializeToString,
            wcf__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RpcGetMsgTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wcf.Wcf/RpcGetMsgTypes',
            wcf__pb2.Empty.SerializeToString,
            wcf__pb2.MsgTypes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RpcGetContacts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wcf.Wcf/RpcGetContacts',
            wcf__pb2.Empty.SerializeToString,
            wcf__pb2.Contacts.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RpcGetDbNames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wcf.Wcf/RpcGetDbNames',
            wcf__pb2.Empty.SerializeToString,
            wcf__pb2.DbNames.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RpcGetDbTables(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wcf.Wcf/RpcGetDbTables',
            wcf__pb2.String.SerializeToString,
            wcf__pb2.DbTables.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RpcExecDbQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wcf.Wcf/RpcExecDbQuery',
            wcf__pb2.DbQuery.SerializeToString,
            wcf__pb2.DbRows.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RpcAcceptNewFriend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wcf.Wcf/RpcAcceptNewFriend',
            wcf__pb2.Verification.SerializeToString,
            wcf__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
