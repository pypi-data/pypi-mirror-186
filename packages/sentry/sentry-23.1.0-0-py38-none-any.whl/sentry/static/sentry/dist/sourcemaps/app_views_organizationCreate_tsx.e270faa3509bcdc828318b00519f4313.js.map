{"version":3,"file":"chunks/app_views_organizationCreate_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"ugBAcA,SAASA,EAAa,GAAyC,IAAzC,SAACC,EAAQ,WAAEC,EAAU,SAAEC,GAAgB,EAC3D,MAAMC,GAAMC,EAAAA,EAAAA,KAaZ,OAXAC,EAAAA,EAAAA,YAAU,KACRC,SAASC,KAAKC,UAAUC,IAAI,UAErB,IAAMH,SAASC,KAAKC,UAAUE,OAAO,YAC3C,KAQD,eAAKC,UAAU,MAAK,WAClB,eAAKA,UAAU,gBACf,eAAKA,UAAU,YAAYC,MAAO,CAACZ,YAAU,UAC3C,eAAKW,UAAU,gBAAe,WAC5B,eAAKA,UAAU,aAAY,WACzB,aAAGE,KAAK,IAAG,UACT,QAAC,KAAU,CAACC,KAAK,SAElBb,IACC,aAAGU,UAAU,oBAAoBI,QAf7CC,uBACQC,EAAAA,EAAAA,IAAOd,GACbe,OAAOC,SAASC,OAAO,cACzB,EAYmE,UACrD,QAACC,EAAM,WAAEC,EAAAA,EAAAA,GAAE,oBAIjB,eAAKX,UAAU,2BAA0B,SAAET,WAKrD,CAlCSH,EAAY,2BAoCrB,MAAMsB,GAAS,OAAO,OAAM,oBAAb,CAAc,cACdE,GAAKA,EAAEC,MAAMC,eAAa,KAGzC,G,0ZC9CA,SAASC,IACP,MAAMC,EAAWC,EAAAA,EAAAA,IAAgB,YAC3BC,EAAaD,EAAAA,EAAAA,IAAgB,cAEnC,OACE,QAAC,IAAmB,CAACE,OAAOR,EAAAA,EAAAA,GAAE,uBAAuB,UACnD,QAAC,IAAY,CAACrB,YAAU,aACtB,wBAAKqB,EAAAA,EAAAA,GAAE,gCAEP,uBACGA,EAAAA,EAAAA,GACC,6LAIJ,QAAC,KAAO,CACNS,YAAa,CAACC,aAAa,GAC3BC,aAAaX,EAAAA,EAAAA,GAAE,uBACfY,YAAY,kBACZC,UAAU,OACVC,gBAAkBC,IAChB,MAAMC,EAAoBD,GAAYE,SAASC,SAAS,oBACxD,IAAIC,GAAUC,EAAAA,EAAAA,GACX,kBAAiBL,EAAWM,qBAC7B,CAACC,oBAAqBN,IAEpBA,IACFG,EAAW,GAAEJ,EAAWQ,MAAMC,kBAAkBL,KAIlDvB,OAAOC,SAASC,OAAOqB,EAAQ,EAEjCM,gBAAc,aAEd,QAAC,KAAS,CACRC,GAAG,oBACHC,KAAK,OACLC,OAAO5B,EAAAA,EAAAA,GAAE,qBACT6B,aAAa7B,EAAAA,EAAAA,GAAE,mBACf8B,QAAQ,EACRC,0BAAwB,EACxBC,SAAO,EACPC,UAAQ,IAGT5B,GAAYE,IACX,QAAC,KAAa,CACZoB,KAAK,aACLC,OAAOM,EAAAA,EAAAA,IACL,mFACA,CACEC,WAAW,aAAG5C,KAAMc,IACpB+B,aAAa,aAAG7C,KAAMgB,MAG1BuB,QAAQ,EACRE,SAAO,EACPC,UAAQ,WAOtB,CAjES7B,EAAkB,iCAmE3B,S","sources":["webpack:///./app/components/narrowLayout.tsx","webpack:///./app/views/organizationCreate.tsx"],"sourcesContent":["import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  children: React.ReactNode;\n  maxWidth?: string;\n  showLogout?: boolean;\n};\n\nfunction NarrowLayout({maxWidth, showLogout, children}: Props) {\n  const api = useApi();\n\n  useEffect(() => {\n    document.body.classList.add('narrow');\n\n    return () => document.body.classList.remove('narrow');\n  }, []);\n\n  async function handleLogout() {\n    await logout(api);\n    window.location.assign('/auth/login');\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"pattern-bg\" />\n      <div className=\"container\" style={{maxWidth}}>\n        <div className=\"box box-modal\">\n          <div className=\"box-header\">\n            <a href=\"/\">\n              <IconSentry size=\"lg\" />\n            </a>\n            {showLogout && (\n              <a className=\"logout pull-right\" onClick={handleLogout}>\n                <Logout>{t('Sign out')}</Logout>\n              </a>\n            )}\n          </div>\n          <div className=\"box-content with-padding\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Logout = styled('span')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nexport default NarrowLayout;\n","import {ApiForm, CheckboxField, TextField} from 'sentry/components/forms';\nimport NarrowLayout from 'sentry/components/narrowLayout';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {OrganizationSummary} from 'sentry/types';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\nfunction OrganizationCreate() {\n  const termsUrl = ConfigStore.get('termsUrl');\n  const privacyUrl = ConfigStore.get('privacyUrl');\n\n  return (\n    <SentryDocumentTitle title={t('Create Organization')}>\n      <NarrowLayout showLogout>\n        <h3>{t('Create a New Organization')}</h3>\n\n        <p>\n          {t(\n            \"Organizations represent the top level in your hierarchy. You'll be able to bundle a collection of teams within an organization as well as give organization-wide permissions to users.\"\n          )}\n        </p>\n\n        <ApiForm\n          initialData={{defaultTeam: true}}\n          submitLabel={t('Create Organization')}\n          apiEndpoint=\"/organizations/\"\n          apiMethod=\"POST\"\n          onSubmitSuccess={(createdOrg: OrganizationSummary) => {\n            const hasCustomerDomain = createdOrg?.features.includes('customer-domains');\n            let nextUrl = normalizeUrl(\n              `/organizations/${createdOrg.slug}/projects/new/`,\n              {forceCustomerDomain: hasCustomerDomain}\n            );\n            if (hasCustomerDomain) {\n              nextUrl = `${createdOrg.links.organizationUrl}${nextUrl}`;\n            }\n            // redirect to project creation *(BYPASS REACT ROUTER AND FORCE PAGE REFRESH TO GRAB CSRF TOKEN)*\n            // browserHistory.pushState(null, `/organizations/${data.slug}/projects/new/`);\n            window.location.assign(nextUrl);\n          }}\n          requireChanges\n        >\n          <TextField\n            id=\"organization-name\"\n            name=\"name\"\n            label={t('Organization Name')}\n            placeholder={t('e.g. My Company')}\n            inline={false}\n            flexibleControlStateSize\n            stacked\n            required\n          />\n\n          {termsUrl && privacyUrl && (\n            <CheckboxField\n              name=\"agreeTerms\"\n              label={tct(\n                'I agree to the [termsLink:Terms of Service] and the [privacyLink:Privacy Policy]',\n                {\n                  termsLink: <a href={termsUrl} />,\n                  privacyLink: <a href={privacyUrl} />,\n                }\n              )}\n              inline={false}\n              stacked\n              required\n            />\n          )}\n        </ApiForm>\n      </NarrowLayout>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default OrganizationCreate;\n"],"names":["NarrowLayout","maxWidth","showLogout","children","api","useApi","useEffect","document","body","classList","add","remove","className","style","href","size","onClick","async","logout","window","location","assign","Logout","t","p","theme","fontSizeLarge","OrganizationCreate","termsUrl","ConfigStore","privacyUrl","title","initialData","defaultTeam","submitLabel","apiEndpoint","apiMethod","onSubmitSuccess","createdOrg","hasCustomerDomain","features","includes","nextUrl","normalizeUrl","slug","forceCustomerDomain","links","organizationUrl","requireChanges","id","name","label","placeholder","inline","flexibleControlStateSize","stacked","required","tct","termsLink","privacyLink"],"sourceRoot":""}