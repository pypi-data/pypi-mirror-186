{"version":3,"file":"chunks/app_views_profiling_profileSummary_content_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/profiling/arrayLinks.tsx","webpack:///./app/components/profiling/functionsTable.tsx","webpack:///./app/views/profiling/profileSummary/content.tsx","webpack:///./app/utils/profiling/hooks/useFunctions.tsx"],"sourcesContent":["import {useState} from 'react';\nimport {Link} from 'react-router';\nimport styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\n\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Item = {\n  target: LocationDescriptor;\n  value: string;\n};\n\ninterface ArrayLinksProps {\n  items: Item[];\n}\n\nfunction ArrayLinks({items}: ArrayLinksProps) {\n  const [expanded, setExpanded] = useState(false);\n  const firstItem = items[0];\n\n  return (\n    <ArrayContainer expanded={expanded}>\n      {firstItem && <LinkedItem item={firstItem} />}\n      {items.length > 1 &&\n        expanded &&\n        items\n          .slice(1, items.length)\n          .map(item => <LinkedItem key={item.value} item={item} />)}\n      {items.length > 1 ? (\n        <ButtonContainer>\n          <button onClick={() => setExpanded(!expanded)}>\n            {expanded ? t('[collapse]') : t('[+%s more]', items.length - 1)}\n          </button>\n        </ButtonContainer>\n      ) : null}\n    </ArrayContainer>\n  );\n}\n\nfunction LinkedItem({item}: {item: Item}) {\n  return (\n    <ArrayItem>\n      <Link to={item.target}>{item.value}</Link>\n    </ArrayItem>\n  );\n}\n\nconst ArrayContainer = styled('div')<{expanded: boolean}>`\n  display: flex;\n  flex-direction: ${p => (p.expanded ? 'column' : 'row')};\n`;\n\nconst ArrayItem = styled('span')`\n  flex-shrink: 1;\n  display: block;\n\n  ${p => p.theme.overflowEllipsis};\n  width: unset;\n`;\n\nconst ButtonContainer = styled('div')`\n  white-space: nowrap;\n\n  & button {\n    background: none;\n    border: 0;\n    outline: none;\n    padding: 0;\n    cursor: pointer;\n    color: ${p => p.theme.linkColor};\n    margin-left: ${space(0.5)};\n  }\n`;\n\nexport {ArrayLinks};\n","import {useCallback, useMemo} from 'react';\nimport styled from '@emotion/styled';\n\nimport Count from 'sentry/components/count';\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport PerformanceDuration from 'sentry/components/performanceDuration';\nimport {ArrayLinks} from 'sentry/components/profiling/arrayLinks';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport {SuspectFunction} from 'sentry/types/profiling/core';\nimport {Container, NumberContainer} from 'sentry/utils/discover/styles';\nimport {getShortEventId} from 'sentry/utils/events';\nimport {generateProfileFlamechartRouteWithQuery} from 'sentry/utils/profiling/routes';\nimport {renderTableHead} from 'sentry/utils/profiling/tableRenderer';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ninterface FunctionsTableProps {\n  error: string | null;\n  functions: SuspectFunction[];\n  isLoading: boolean;\n  project: Project;\n  sort: string;\n}\n\nfunction FunctionsTable(props: FunctionsTableProps) {\n  const location = useLocation();\n  const organization = useOrganization();\n\n  const sort = useMemo(() => {\n    let column = props.sort;\n    let order: 'asc' | 'desc' = 'asc' as const;\n\n    if (props.sort.startsWith('-')) {\n      column = props.sort.substring(1);\n      order = 'desc' as const;\n    }\n\n    if (!SORTABLE_COLUMNS.has(column as any)) {\n      column = 'p99';\n    }\n\n    return {\n      key: column as TableColumnKey,\n      order,\n    };\n  }, [props.sort]);\n\n  const functions: TableDataRow[] = useMemo(() => {\n    return props.functions.map(func => {\n      const {worst, examples, ...rest} = func;\n\n      const allExamples = examples.filter(example => example !== worst);\n      allExamples.unshift(worst);\n\n      return {\n        ...rest,\n        examples: allExamples.map(example => {\n          const profileId = example.replaceAll('-', '');\n          return {\n            value: getShortEventId(profileId),\n            target: generateProfileFlamechartRouteWithQuery({\n              orgSlug: organization.slug,\n              projectSlug: props.project.slug,\n              profileId,\n              query: {\n                // specify the frame to focus, the flamegraph will switch\n                // to the appropriate thread when these are specified\n                frameName: func.name,\n                framePackage: func.package,\n              },\n            }),\n          };\n        }),\n      };\n    });\n  }, [organization.slug, props.project.slug, props.functions]);\n\n  const generateSortLink = useCallback(\n    (column: TableColumnKey) => {\n      if (!SORTABLE_COLUMNS.has(column)) {\n        return () => undefined;\n      }\n\n      const direction =\n        sort.key !== column ? 'desc' : sort.order === 'desc' ? 'asc' : 'desc';\n\n      return () => ({\n        ...location,\n        query: {\n          ...location.query,\n          functionsSort: `${direction === 'desc' ? '-' : ''}${column}`,\n        },\n      });\n    },\n    [location, sort]\n  );\n\n  return (\n    <GridEditable\n      isLoading={props.isLoading}\n      error={props.error}\n      data={functions}\n      columnOrder={COLUMN_ORDER.map(key => COLUMNS[key])}\n      columnSortBy={[]}\n      grid={{\n        renderHeadCell: renderTableHead({\n          currentSort: sort,\n          rightAlignedColumns: RIGHT_ALIGNED_COLUMNS,\n          sortableColumns: SORTABLE_COLUMNS,\n          generateSortLink,\n        }),\n        renderBodyCell: renderFunctionsTableCell,\n      }}\n      location={location}\n    />\n  );\n}\n\nconst RIGHT_ALIGNED_COLUMNS = new Set<TableColumnKey>(['p75', 'p99', 'count']);\nconst SORTABLE_COLUMNS = RIGHT_ALIGNED_COLUMNS;\n\nfunction renderFunctionsTableCell(\n  column: TableColumn,\n  dataRow: TableDataRow,\n  rowIndex: number,\n  columnIndex: number\n) {\n  return (\n    <ProfilingFunctionsTableCell\n      column={column}\n      dataRow={dataRow}\n      rowIndex={rowIndex}\n      columnIndex={columnIndex}\n    />\n  );\n}\n\ninterface ProfilingFunctionsTableCellProps {\n  column: TableColumn;\n  columnIndex: number;\n  dataRow: TableDataRow;\n  rowIndex: number;\n}\n\nconst EmptyValueContainer = styled('span')`\n  color: ${p => p.theme.gray300};\n`;\n\nfunction ProfilingFunctionsTableCell({\n  column,\n  dataRow,\n}: ProfilingFunctionsTableCellProps) {\n  const value = dataRow[column.key];\n\n  switch (column.key) {\n    case 'count':\n      return (\n        <NumberContainer>\n          <Count value={value} />\n        </NumberContainer>\n      );\n    case 'p75':\n    case 'p99':\n      return (\n        <NumberContainer>\n          <PerformanceDuration nanoseconds={value} abbreviation />\n        </NumberContainer>\n      );\n    case 'examples':\n      return <ArrayLinks items={value} />;\n    case 'name':\n    case 'package':\n      const name = value || <EmptyValueContainer>{t('Unknown')}</EmptyValueContainer>;\n      return <Container>{name}</Container>;\n    default:\n      return <Container>{value}</Container>;\n  }\n}\n\ntype TableColumnKey = keyof Omit<SuspectFunction, 'fingerprint' | 'worst'>;\n\ntype TableDataRow = Record<TableColumnKey, any>;\n\ntype TableColumn = GridColumnOrder<TableColumnKey>;\n\nconst COLUMN_ORDER: TableColumnKey[] = [\n  'name',\n  'package',\n  'count',\n  'p75',\n  'p99',\n  'examples',\n];\n\nconst COLUMNS: Record<TableColumnKey, TableColumn> = {\n  name: {\n    key: 'name',\n    name: t('Name'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  package: {\n    key: 'package',\n    name: t('Package'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  path: {\n    key: 'path',\n    name: t('Path'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p75: {\n    key: 'p75',\n    name: t('P75 Total Duration'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p99: {\n    key: 'p99',\n    name: t('P99 Total Duration'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  count: {\n    key: 'count',\n    name: t('Total Occurrences'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  examples: {\n    key: 'examples',\n    name: t('Example Profiles'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n};\n\nexport {FunctionsTable};\n","import {useCallback, useMemo, useState} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport CompactSelect from 'sentry/components/compactSelect';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport Pagination from 'sentry/components/pagination';\nimport {FunctionsTable} from 'sentry/components/profiling/functionsTable';\nimport {ProfileEventsTable} from 'sentry/components/profiling/profileEventsTable';\nimport {mobile} from 'sentry/data/platformCategories';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {PageFilters, Project} from 'sentry/types';\nimport {useFunctions} from 'sentry/utils/profiling/hooks/useFunctions';\nimport {\n  formatSort,\n  useProfileEvents,\n} from 'sentry/utils/profiling/hooks/useProfileEvents';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nconst FUNCTIONS_CURSOR_NAME = 'functionsCursor';\n\ninterface ProfileSummaryContentProps {\n  location: Location;\n  project: Project;\n  query: string;\n  selection: PageFilters;\n  transaction: string;\n}\n\nfunction ProfileSummaryContent(props: ProfileSummaryContentProps) {\n  const fields = useMemo(\n    () => getProfilesTableFields(props.project.platform),\n    [props.project]\n  );\n\n  const profilesCursor = useMemo(\n    () => decodeScalar(props.location.query.cursor),\n    [props.location.query.cursor]\n  );\n\n  const functionsCursor = useMemo(\n    () => decodeScalar(props.location.query.functionsCursor),\n    [props.location.query.functionsCursor]\n  );\n\n  const functionsSort = useMemo(\n    () => decodeScalar(props.location.query.functionsSort, '-p99'),\n    [props.location.query.functionsSort]\n  );\n\n  const sort = formatSort<ProfilingFieldType>(\n    decodeScalar(props.location.query.sort),\n    fields,\n    {\n      key: 'timestamp',\n      order: 'desc',\n    }\n  );\n\n  const profiles = useProfileEvents<ProfilingFieldType>({\n    cursor: profilesCursor,\n    fields,\n    query: props.query,\n    sort,\n    limit: 5,\n    referrer: 'api.profiling.profile-summary-table',\n  });\n\n  const [functionType, setFunctionType] = useState<'application' | 'system' | 'all'>(\n    'application'\n  );\n\n  const functions = useFunctions({\n    cursor: functionsCursor,\n    project: props.project,\n    query: '', // TODO: This doesnt support the same filters\n    selection: props.selection,\n    transaction: props.transaction,\n    sort: functionsSort,\n    functionType,\n  });\n\n  const handleFunctionsCursor = useCallback((cursor, pathname, query) => {\n    browserHistory.push({\n      pathname,\n      query: {...query, [FUNCTIONS_CURSOR_NAME]: cursor},\n    });\n  }, []);\n\n  const handleFilterChange = useCallback(\n    value => {\n      browserHistory.push({\n        ...props.location,\n        query: {...props.location.query, cursor: undefined, sort: value},\n      });\n    },\n    [props.location]\n  );\n\n  return (\n    <Layout.Main fullWidth>\n      <TableHeader>\n        <CompactSelect\n          triggerProps={{prefix: t('Filter'), size: 'xs'}}\n          value={sort.order === 'asc' ? sort.key : `-${sort.key}`}\n          options={FILTER_OPTIONS}\n          onChange={opt => handleFilterChange(opt.value)}\n        />\n        <StyledPagination\n          pageLinks={\n            profiles.status === 'success'\n              ? profiles.data?.[2]?.getResponseHeader('Link') ?? null\n              : null\n          }\n          size=\"xs\"\n        />\n      </TableHeader>\n      <ProfileEventsTable\n        columns={fields}\n        data={profiles.status === 'success' ? profiles.data[0] : null}\n        error={profiles.status === 'error' ? t('Unable to load profiles') : null}\n        isLoading={profiles.status === 'loading'}\n        sort={sort}\n      />\n      <TableHeader>\n        <CompactSelect\n          triggerProps={{prefix: t('Suspect Functions'), size: 'xs'}}\n          value={functionType}\n          options={[\n            {\n              label: t('All'),\n              value: 'all' as const,\n            },\n            {\n              label: t('Application'),\n              value: 'application' as const,\n            },\n            {\n              label: t('System'),\n              value: 'system' as const,\n            },\n          ]}\n          onChange={({value}) => setFunctionType(value)}\n        />\n        <StyledPagination\n          pageLinks={functions.type === 'resolved' ? functions.data.pageLinks : null}\n          onCursor={handleFunctionsCursor}\n          size=\"xs\"\n        />\n      </TableHeader>\n      <FunctionsTable\n        error={functions.type === 'errored' ? functions.error : null}\n        isLoading={functions.type === 'initial' || functions.type === 'loading'}\n        functions={functions.type === 'resolved' ? functions.data.functions : []}\n        project={props.project}\n        sort={functionsSort}\n      />\n    </Layout.Main>\n  );\n}\n\nconst ALL_FIELDS = [\n  'id',\n  'timestamp',\n  'release',\n  'device.model',\n  'device.classification',\n  'device.arch',\n  'profile.duration',\n] as const;\n\nexport type ProfilingFieldType = typeof ALL_FIELDS[number];\n\nexport function getProfilesTableFields(platform: Project['platform']) {\n  if (mobile.includes(platform as any)) {\n    return MOBILE_FIELDS;\n  }\n\n  return DEFAULT_FIELDS;\n}\n\nconst MOBILE_FIELDS: ProfilingFieldType[] = [...ALL_FIELDS];\nconst DEFAULT_FIELDS: ProfilingFieldType[] = [\n  'id',\n  'timestamp',\n  'release',\n  'device.arch',\n  'profile.duration',\n];\n\nconst FILTER_OPTIONS = [\n  {\n    label: t('Recent Profiles'),\n    value: '-timestamp',\n  },\n  {\n    label: t('Slowest Profiles'),\n    value: '-profile.duration',\n  },\n  {\n    label: t('Fastest Profiles'),\n    value: 'profile.duration',\n  },\n];\n\nconst TableHeader = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${space(1)};\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin: 0 0 0 ${space(1)};\n`;\n\nexport {ProfileSummaryContent};\n","import {useEffect, useState} from 'react';\nimport * as Sentry from '@sentry/react';\n\nimport {Client} from 'sentry/api';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters, Project, RequestState} from 'sentry/types';\nimport {SuspectFunction} from 'sentry/types/profiling/core';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ntype FunctionsResult = {\n  functions: SuspectFunction[];\n  pageLinks: string | null;\n};\n\ninterface UseFunctionsOptions {\n  project: Project;\n  query: string;\n  sort: string;\n  transaction: string;\n  cursor?: string;\n  functionType?: 'application' | 'system' | 'all';\n  selection?: PageFilters;\n}\n\nfunction useFunctions({\n  functionType,\n  project,\n  query,\n  transaction,\n  sort,\n  cursor,\n  selection,\n}: UseFunctionsOptions): RequestState<FunctionsResult> {\n  const api = useApi();\n  const organization = useOrganization();\n\n  const [requestState, setRequestState] = useState<RequestState<FunctionsResult>>({\n    type: 'initial',\n  });\n\n  useEffect(() => {\n    if (selection === undefined) {\n      return undefined;\n    }\n\n    setRequestState({type: 'loading'});\n\n    fetchFunctions(api, organization, {\n      functionType,\n      projectSlug: project.slug,\n      query,\n      selection,\n      sort,\n      transaction,\n      cursor,\n    })\n      .then(([functions, , response]) => {\n        setRequestState({\n          type: 'resolved',\n          data: {\n            functions: functions.functions ?? [],\n            pageLinks: response?.getResponseHeader('Link') ?? null,\n          },\n        });\n      })\n      .catch(err => {\n        setRequestState({type: 'errored', error: t('Error: Unable to load functions')});\n        Sentry.captureException(err);\n      });\n\n    return () => api.clear();\n  }, [\n    api,\n    cursor,\n    functionType,\n    organization,\n    project.slug,\n    query,\n    selection,\n    sort,\n    transaction,\n  ]);\n\n  return requestState;\n}\n\nfunction fetchFunctions(\n  api: Client,\n  organization: Organization,\n  {\n    cursor,\n    functionType,\n    projectSlug,\n    query,\n    selection,\n    sort,\n    transaction,\n  }: {\n    cursor: string | undefined;\n    functionType: 'application' | 'system' | 'all' | undefined;\n    projectSlug: Project['slug'];\n    query: string;\n    selection: PageFilters;\n    sort: string;\n    transaction: string;\n  }\n) {\n  const conditions = new MutableSearch(query);\n  conditions.setFilterValues('transaction_name', [transaction]);\n\n  return api.requestPromise(\n    `/projects/${organization.slug}/${projectSlug}/profiling/functions/`,\n    {\n      method: 'GET',\n      includeAllArgs: true,\n      query: {\n        cursor,\n        environment: selection.environments,\n        ...normalizeDateTimeParams(selection.datetime),\n        query: conditions.formatString(),\n        sort,\n        is_application:\n          functionType === 'application'\n            ? '1'\n            : functionType === 'system'\n            ? '0'\n            : undefined,\n      },\n    }\n  );\n}\nexport {useFunctions};\n"],"names":["ArrayLinks","items","expanded","setExpanded","useState","firstItem","ArrayContainer","LinkedItem","item","length","slice","map","value","ButtonContainer","onClick","t","ArrayItem","Link","to","target","p","theme","overflowEllipsis","linkColor","space","FunctionsTable","props","location","useLocation","organization","useOrganization","sort","useMemo","column","order","startsWith","substring","SORTABLE_COLUMNS","has","key","functions","func","worst","examples","rest","allExamples","filter","example","unshift","profileId","replaceAll","getShortEventId","generateProfileFlamechartRouteWithQuery","orgSlug","slug","projectSlug","project","query","frameName","name","framePackage","package","generateSortLink","useCallback","direction","functionsSort","isLoading","error","data","columnOrder","COLUMN_ORDER","COLUMNS","columnSortBy","grid","renderHeadCell","renderTableHead","currentSort","rightAlignedColumns","RIGHT_ALIGNED_COLUMNS","sortableColumns","renderBodyCell","renderFunctionsTableCell","Set","dataRow","rowIndex","columnIndex","ProfilingFunctionsTableCell","EmptyValueContainer","gray300","nanoseconds","abbreviation","width","COL_WIDTH_UNDEFINED","path","p75","p99","count","ProfileSummaryContent","fields","getProfilesTableFields","platform","profilesCursor","decodeScalar","cursor","functionsCursor","formatSort","profiles","useProfileEvents","limit","referrer","functionType","setFunctionType","transaction","selection","api","useApi","requestState","setRequestState","type","useEffect","undefined","conditions","MutableSearch","setFilterValues","requestPromise","method","includeAllArgs","environment","environments","normalizeDateTimeParams","datetime","formatString","is_application","fetchFunctions","then","response","pageLinks","getResponseHeader","catch","err","Sentry","clear","useFunctions","handleFunctionsCursor","pathname","browserHistory","handleFilterChange","fullWidth","TableHeader","triggerProps","prefix","size","options","FILTER_OPTIONS","onChange","opt","StyledPagination","status","columns","label","onCursor","mobile","MOBILE_FIELDS","DEFAULT_FIELDS","Pagination"],"sourceRoot":""}