{"version":3,"file":"chunks/node_modules_lodash_mean_js.xxxxxxxxxxxxxxxxxxxx.js","mappings":"6IAAA,IAAIA,EAAU,EAAQ,sCAmBtBC,EAAOC,QALP,SAAkBC,EAAOC,GACvB,IAAIC,EAAkB,MAATF,EAAgB,EAAIA,EAAME,OACvC,OAAOA,EAAUL,EAAQG,EAAOC,GAAYC,EAbpC,GAcV,C,2CCMAJ,EAAOC,QAdP,SAAiBC,EAAOC,GAKtB,IAJA,IAAIE,EACAC,GAAS,EACTF,EAASF,EAAME,SAEVE,EAAQF,GAAQ,CACvB,IAAIG,EAAUJ,EAASD,EAAMI,SACbE,IAAZD,IACFF,OAAoBG,IAAXH,EAAuBE,EAAWF,EAASE,EAExD,CACA,OAAOF,CACT,C,6CCrBA,IAAII,EAAW,EAAQ,uCACnBC,EAAW,EAAQ,sCAoBvBV,EAAOC,QAJP,SAAcC,GACZ,OAAOO,EAASP,EAAOQ,EACzB,C","sources":["webpack:///../node_modules/lodash/_baseMean.js","webpack:///../node_modules/lodash/_baseSum.js","webpack:///../node_modules/lodash/mean.js"],"sourcesContent":["var baseSum = require('./_baseSum');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/**\n * The base implementation of `_.mean` and `_.meanBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the mean.\n */\nfunction baseMean(array, iteratee) {\n  var length = array == null ? 0 : array.length;\n  return length ? (baseSum(array, iteratee) / length) : NAN;\n}\n\nmodule.exports = baseMean;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","var baseMean = require('./_baseMean'),\n    identity = require('./identity');\n\n/**\n * Computes the mean of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the mean.\n * @example\n *\n * _.mean([4, 2, 8, 6]);\n * // => 5\n */\nfunction mean(array) {\n  return baseMean(array, identity);\n}\n\nmodule.exports = mean;\n"],"names":["baseSum","module","exports","array","iteratee","length","result","index","current","undefined","baseMean","identity"],"sourceRoot":""}