{"version":3,"file":"chunks/app_components_gridEditable_sortLink_tsx-app_components_searchBar_tsx-app_utils_profiling_uni-494a3f.xxxxxxxxxxxxxxxxxxxx.js","mappings":"slBAqBA,SAASA,EAAS,GAQR,IARQ,MAChBC,EAAK,MACLC,EAAK,QACLC,EAAO,iBACPC,EAAgB,QAChBC,EAAO,UACPC,EAAS,QACTC,GACM,EACN,MAAMC,EAASJ,IAEf,IAAKI,IAAWL,EACd,OAAO,QAACM,EAAa,CAACR,MAAOA,EAAM,SAAEC,IAGvC,MAAMQ,EAASJ,GACb,QAACK,EAAe,CAACC,KAAK,KAAKN,UAAyB,SAAdA,EAAuB,OAAS,OAD7C,KAY3B,OACE,QAACO,EAAU,CAACZ,MAAOA,EAAOa,GAAIN,EAAQH,QAT0BU,IAC5DR,IACFQ,EAAEC,iBACFC,EAAAA,eAAAA,QAAuBT,IAEzBH,IAAUU,EAAE,EAIiD,UAC1Db,EAAM,IAAEQ,IAGf,CAhCSV,EAAQ,uBAqCjB,MAAMa,GAAa,QAAQK,IACzB,MAAMC,EAAeC,IAAKF,EAAO,CAAC,QAAS,QAC3C,OAAO,QAAC,IAAI,IAAKC,GAAgB,GAClC,oBAHkB,CAGjB,gHAaGE,GAAwBA,EAAEpB,MAAS,eAAcoB,EAAEpB,SAAW,IAAG,KAGhEQ,GAAgB,OAAO,MAAK,oBAAZ,CAAa,gDAI9BY,GAA4BA,EAAEpB,MAAS,eAAcoB,EAAEpB,SAAW,IAAG,KAGpEU,GAAkB,OAAOW,EAAAA,GAAS,oBAAhB,CAAiB,6CAIzC,G,keC/DA,SAASC,EAAU,GAUA,IATjBC,MAAOC,EAAS,aAChBC,EAAe,GAAE,SACjBC,EAAQ,SACRC,EAAQ,MACRC,EAAK,KACLjB,EAAI,UACJkB,EAAS,SACTC,KACGC,GACY,EACf,MAAMC,GAAWC,EAAAA,EAAAA,QAAyB,OAEnCV,EAAOW,IAAYC,EAAAA,EAAAA,UAASX,GAAaC,IAIhDW,EAAAA,EAAAA,YAAU,KACiB,iBAAdZ,GACTU,EAASV,EACX,GACC,CAACA,IAEJ,MAAMa,GAAgBC,EAAAA,EAAAA,cACnBxB,IACC,MAAM,MAACyB,GAASzB,EAAEP,OAClB2B,EAASK,GACTb,IAAWa,EAAM,GAEnB,CAACb,IAGGc,GAAWF,EAAAA,EAAAA,cACdxB,IACCA,EAAEC,iBACFiB,EAASS,SAASC,OAClBf,IAAWJ,EAAM,GAEnB,CAACI,EAAUJ,IAGPoB,GAAcL,EAAAA,EAAAA,cAAY,KAC9BJ,EAAS,IACTR,IAAW,IACXC,IAAW,GAAG,GACb,CAACD,EAAUC,IAEd,OACE,QAACiB,EAAQ,CAACJ,SAAUA,EAAUX,UAAWA,EAAU,UACjD,QAAC,KAAU,YACT,QAAC,KAAiB,CAACgB,sBAAoB,YACrC,QAAC,KAAU,CAACC,MAAM,UAAUnC,KAAe,OAATA,EAAgB,KAAO,UAE3D,QAACoC,EAAW,IACNhB,EACJiB,IAAKhB,EACLiB,KAAK,OACLC,KAAK,QACLC,aAAa,MACbZ,MAAOhB,EACPG,SAAUW,EACVT,MAAOA,EACPjB,KAAMA,KAER,QAAC,KAAkB,WAChBmB,IACEP,IACD,QAAC6B,EAAuB,CACtBzC,KAAK,OACL0C,YAAU,EACVjD,QAASuC,EACTW,MAAM,QAAC,IAAS,CAAC3C,KAAK,OACtB,cAAY4C,EAAAA,EAAAA,GAAE,kBAO5B,CA/ESjC,EAAS,wBAiFlB,MAAMsB,GAAW,OAAO,OAAM,oBAAb,CAAc,0DAKzBG,GAAc,OAAOS,EAAAA,GAAK,oBAAZ,EAChBpC,GAAKA,EAAEQ,OAAU,UAASR,EAAEQ,UAAQ,KAG3BwB,GAA0B,OAAOK,EAAAA,GAAM,oBAAb,CAAc,UAC1CrC,GAAKA,EAAEsC,MAAMC,SAAO,aAClBC,EAAAA,EAAAA,GAAM,IAAI,KAGvB,G,uJC7GA,MAAMC,EAA2D,CAC/DC,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,QAAS,EACTC,MAAO,GAGF,SAASC,EACdC,EACAvD,GAEA,OAAIuD,IAASvD,EACHwD,GAAcA,EAEhBA,GAAcC,EAASD,EAAGD,EAAMvD,EAC1C,CACO,SAASyD,EACdD,EACAD,EACAvD,GAEA,MAAM0D,EAAiBC,KAAKC,MAAMZ,EAAiBO,IAC7CM,EAAeF,KAAKC,MAAMZ,EAAiBhD,IAGjD,OADcwD,EAAIG,KAAKG,IAAI,GAAIJ,EAAiBG,EAElD,CAEA,MAAME,EAAS,CAACP,EAAWQ,EAAgBC,IAC/B,IAANT,EACK,IAAMQ,EAERR,EAAEU,QAAQD,GAAaD,EAGzB,SAASG,EACdZ,GAEA,MACMa,EAAapB,EAAiBO,GAEpC,QAAmBc,IAAfD,EACF,MAAM,IAAIE,MAAO,sBAAqBf,sCAGxC,MAAa,UAATA,EACM7B,GACCA,EAAMwC,QAAQ,GAIjBxC,IACN,MAAM6C,EAAW7C,EAAQ0C,EAEzB,OAAIG,GAAY,EACPR,EAAOQ,EAAU,IAjBF,GAmBpBA,EAAW,MAAQ,EACdR,EAAOQ,EAAW,KAAM,KApBT,GAsBpBA,EAAW,MAAQ,EACdR,EAAOQ,EAAW,KAAM,KAvBT,GAyBjBR,EAAOQ,EAAW,KAAM,KAzBP,EAyB+B,CAE3D,CAEA,SAASC,EAAIC,EAAWC,GACtB,OAAOf,KAAKgB,MAAMF,GAAGG,WAAWC,SAASH,EAAO,IAClD,CAEO,SAASI,EAAsBvB,GACpC,MAAMa,EAAapB,EAAiBO,GAEpC,QAAmBc,IAAfD,EACF,MAAM,IAAIE,MAAO,sBAAqBf,sCAGxC,OAAQ7B,IACN,MAAMqD,EAAIpB,KAAKqB,IAAItD,EAAQ0C,GAErBa,EAAS,IAAJF,EAEX,MAAQ,GAAErD,EAAQ,EAAI,IAAM,KAAK8C,EAHvBO,EAAI,GAG0B,MAAMP,EAAIO,EAAI,GAAI,MAAMP,EAAIS,EAAK,IAAK,IAAI,CAEtF,C,kHC/FA,MAAMC,EAA4B,CAChCC,EACAC,KAEA,MAAMC,GAAcjE,EAAAA,EAAAA,SAAgB,IAEpCG,EAAAA,EAAAA,YAAU,KACJ8D,EAAYzD,QACdyD,EAAYzD,SAAU,EAIxBuD,GAAI,GAGHC,EAAK,C","sources":["webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/utils/profiling/units/units.ts","webpack:///./app/utils/useEffectAfterFirstRender.ts"],"sourcesContent":["import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n  replace?: boolean;\n};\n\nfunction SortLink({\n  align,\n  title,\n  canSort,\n  generateSortLink,\n  onClick,\n  direction,\n  replace,\n}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  const handleOnClick: React.MouseEventHandler<HTMLAnchorElement> = e => {\n    if (replace) {\n      e.preventDefault();\n      browserHistory.replace(target);\n    }\n    onClick?.(e);\n  };\n\n  return (\n    <StyledLink align={align} to={target} onClick={handleOnClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align', 'css']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {\n  Input,\n  InputGroup,\n  InputLeadingItems,\n  InputProps,\n  InputTrailingItems,\n} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputLeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputLeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputTrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputTrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n","export function relativeChange(final: number, initial: number): number {\n  return (final - initial) / initial;\n}\n\nexport type ProfilingFormatterUnit =\n  | 'nanoseconds'\n  | 'microseconds'\n  | 'milliseconds'\n  | 'seconds'\n  | 'count';\n\nconst durationMappings: Record<ProfilingFormatterUnit, number> = {\n  nanoseconds: 1e-9,\n  microseconds: 1e-6,\n  milliseconds: 1e-3,\n  seconds: 1,\n  count: 1,\n};\n\nexport function makeFormatTo(\n  from: ProfilingFormatterUnit | string,\n  to: ProfilingFormatterUnit | string\n) {\n  if (from === to) {\n    return (v: number) => v;\n  }\n  return (v: number) => formatTo(v, from, to);\n}\nexport function formatTo(\n  v: number,\n  from: ProfilingFormatterUnit | string,\n  to: ProfilingFormatterUnit | string\n) {\n  const fromMultiplier = Math.log10(durationMappings[from]);\n  const toMultiplier = Math.log10(durationMappings[to]);\n\n  const value = v * Math.pow(10, fromMultiplier - toMultiplier);\n  return value;\n}\n\nconst format = (v: number, abbrev: string, precision: number) => {\n  if (v === 0) {\n    return '0' + abbrev;\n  }\n  return v.toFixed(precision) + abbrev;\n};\n\nexport function makeFormatter(\n  from: ProfilingFormatterUnit | string\n): (value: number) => string {\n  const DEFAULT_PRECISION = 2;\n  const multiplier = durationMappings[from];\n\n  if (multiplier === undefined) {\n    throw new Error(`Cannot format unit ${from}, duration mapping is not defined`);\n  }\n\n  if (from === 'count') {\n    return (value: number) => {\n      return value.toFixed(0);\n    };\n  }\n\n  return (value: number) => {\n    const duration = value * multiplier;\n\n    if (duration >= 1) {\n      return format(duration, 's', DEFAULT_PRECISION);\n    }\n    if (duration / 1e-3 >= 1) {\n      return format(duration / 1e-3, 'ms', DEFAULT_PRECISION);\n    }\n    if (duration / 1e-6 >= 1) {\n      return format(duration / 1e-6, 'μs', DEFAULT_PRECISION);\n    }\n    return format(duration / 1e-9, 'ns', DEFAULT_PRECISION);\n  };\n}\n\nfunction pad(n: number, slots: number) {\n  return Math.floor(n).toString().padStart(slots, '0');\n}\n\nexport function makeTimelineFormatter(from: ProfilingFormatterUnit | string) {\n  const multiplier = durationMappings[from];\n\n  if (multiplier === undefined) {\n    throw new Error(`Cannot format unit ${from}, duration mapping is not defined`);\n  }\n\n  return (value: number) => {\n    const s = Math.abs(value * multiplier);\n    const m = s / 60;\n    const ms = s * 1e3;\n\n    return `${value < 0 ? '-' : ''}${pad(m, 2)}:${pad(s % 60, 2)}.${pad(ms % 1e3, 3)}`;\n  };\n}\n","import {useEffect, useRef} from 'react';\n\nconst useEffectAfterFirstRender = (\n  cb: React.EffectCallback,\n  deps: React.DependencyList\n): void => {\n  const firstRender = useRef<boolean>(true);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n\n    cb();\n    // Dependencies are explicitly managed and the deps warning is enabled for the custom hook.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport {useEffectAfterFirstRender};\n"],"names":["SortLink","align","title","canSort","generateSortLink","onClick","direction","replace","target","StyledNonLink","arrow","StyledIconArrow","size","StyledLink","to","e","preventDefault","browserHistory","props","forwardProps","omit","p","IconArrow","SearchBar","query","queryProp","defaultQuery","onChange","onSearch","width","className","trailing","inputProps","inputRef","useRef","setQuery","useState","useEffect","onQueryChange","useCallback","value","onSubmit","current","blur","clearSearch","FormWrap","disablePointerEvents","color","StyledInput","ref","type","name","autoComplete","SearchBarTrailingButton","borderless","icon","t","Input","Button","theme","subText","space","durationMappings","nanoseconds","microseconds","milliseconds","seconds","count","makeFormatTo","from","v","formatTo","fromMultiplier","Math","log10","toMultiplier","pow","format","abbrev","precision","toFixed","makeFormatter","multiplier","undefined","Error","duration","pad","n","slots","floor","toString","padStart","makeTimelineFormatter","s","abs","ms","useEffectAfterFirstRender","cb","deps","firstRender"],"sourceRoot":""}