{"version":3,"file":"chunks/app_actionCreators_onboardingTasks_tsx-app_components_events_interfaces_utils_tsx-app_compone-71a93c.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/onboardingTasks.tsx","webpack:///./app/components/events/interfaces/utils.tsx","webpack:///./app/components/hook.tsx","webpack:///./app/utils/parseHtmlMarks.tsx","webpack:///./app/components/search/sources/helpSource.tsx","webpack:///./app/components/helpSearch.tsx","webpack:///./app/components/modals/helpSearchModal.tsx","webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/utils/demoMode.tsx","webpack:///./app/utils/events.tsx","webpack:///./app/utils/platform.tsx","webpack:///./app/utils/useRouter.tsx"],"sourcesContent":["import {Client} from 'sentry/api';\nimport ConfigStore from 'sentry/stores/configStore';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport {OnboardingTask, OnboardingTaskStatus, Organization} from 'sentry/types';\n\n/**\n * Update an onboarding task.\n *\n * If no API client is provided the task will not be updated on the server side\n * and will only update in the organization store.\n */\nexport function updateOnboardingTask(\n  api: Client | null,\n  organization: Organization,\n  updatedTask: Partial<Pick<OnboardingTask, 'status' | 'data'>> & {\n    task: OnboardingTask['task'];\n    /**\n     * Marks completion seen. This differs from the OnboardingTask\n     * completionSeen type as that returns the date completion was seen.\n     */\n    completionSeen?: boolean;\n  }\n) {\n  if (api !== null) {\n    api.requestPromise(`/organizations/${organization.slug}/onboarding-tasks/`, {\n      method: 'POST',\n      data: updatedTask,\n    });\n  }\n\n  const hasExistingTask = organization.onboardingTasks.find(\n    task => task.task === updatedTask.task\n  );\n\n  const user = ConfigStore.get('user');\n  const onboardingTasks = hasExistingTask\n    ? organization.onboardingTasks.map(task =>\n        task.task === updatedTask.task ? {...task, ...updatedTask} : task\n      )\n    : [...organization.onboardingTasks, {...updatedTask, user} as OnboardingTaskStatus];\n\n  OrganizationStore.onUpdate({onboardingTasks});\n}\n","import * as Sentry from '@sentry/react';\nimport compact from 'lodash/compact';\nimport isString from 'lodash/isString';\nimport uniq from 'lodash/uniq';\nimport * as qs from 'query-string';\n\nimport {FILTER_MASK} from 'sentry/constants';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Frame, PlatformType} from 'sentry/types';\nimport {Image} from 'sentry/types/debugImage';\nimport {EntryRequest} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\nimport {fileExtensionToPlatform, getFileExtension} from 'sentry/utils/fileExtension';\n\n/**\n * Attempts to escape a string from any bash double quote special characters.\n */\nfunction escapeBashString(v: string) {\n  return v.replace(/([\"$`\\\\])/g, '\\\\$1');\n}\n\n// TODO(dcramer): support cookies\nexport function getCurlCommand(data: EntryRequest['data']) {\n  let result = 'curl';\n\n  if (defined(data.method) && data.method !== 'GET') {\n    result += ' \\\\\\n -X ' + data.method;\n  }\n\n  // TODO(benvinegar): just gzip? what about deflate?\n  const compressed = data.headers?.find(\n    h => h[0] === 'Accept-Encoding' && h[1].indexOf('gzip') !== -1\n  );\n  if (compressed) {\n    result += ' \\\\\\n --compressed';\n  }\n\n  // sort headers\n  const headers =\n    data.headers?.sort(function (a, b) {\n      return a[0] === b[0] ? 0 : a[0] < b[0] ? -1 : 1;\n    }) ?? [];\n\n  for (const header of headers) {\n    result += ' \\\\\\n -H \"' + header[0] + ': ' + escapeBashString(header[1] + '') + '\"';\n  }\n\n  if (defined(data.data)) {\n    switch (data.inferredContentType) {\n      case 'application/json':\n        result += ' \\\\\\n --data \"' + escapeBashString(JSON.stringify(data.data)) + '\"';\n        break;\n      case 'application/x-www-form-urlencoded':\n        result +=\n          ' \\\\\\n --data \"' +\n          escapeBashString(qs.stringify(data.data as {[key: string]: any})) +\n          '\"';\n        break;\n\n      default:\n        if (isString(data.data)) {\n          result += ' \\\\\\n --data \"' + escapeBashString(data.data) + '\"';\n        } else if (Object.keys(data.data).length === 0) {\n          // Do nothing with empty object data.\n        } else {\n          Sentry.withScope(scope => {\n            scope.setExtra('data', data);\n            Sentry.captureException(new Error('Unknown event data'));\n          });\n        }\n    }\n  }\n\n  result += ' \\\\\\n \"' + getFullUrl(data) + '\"';\n  return result;\n}\n\nexport function stringifyQueryList(query: string | [key: string, value: string][]) {\n  if (isString(query)) {\n    return query;\n  }\n\n  const queryObj: Record<string, string[]> = {};\n  for (const kv of query) {\n    if (kv !== null && kv.length === 2) {\n      const [key, value] = kv;\n      if (value !== null) {\n        if (Array.isArray(queryObj[key])) {\n          queryObj[key].push(value);\n        } else {\n          queryObj[key] = [value];\n        }\n      }\n    }\n  }\n  return qs.stringify(queryObj);\n}\n\nexport function getFullUrl(data: EntryRequest['data']): string | undefined {\n  let fullUrl = data?.url;\n  if (!fullUrl) {\n    return fullUrl;\n  }\n\n  if (data?.query?.length) {\n    fullUrl += '?' + stringifyQueryList(data.query);\n  }\n\n  if (data.fragment) {\n    fullUrl += '#' + data.fragment;\n  }\n\n  return escapeBashString(fullUrl);\n}\n\n/**\n * Converts an object of body/querystring key/value pairs\n * into a tuple of [key, value] pairs, and sorts them.\n *\n * This handles the case for query strings that were decoded like so:\n *\n *   ?foo=bar&foo=baz => { foo: ['bar', 'baz'] }\n *\n * By converting them to [['foo', 'bar'], ['foo', 'baz']]\n */\nexport function objectToSortedTupleArray(obj: Record<string, string | string[]>) {\n  return Object.keys(obj)\n    .reduce<[string, string][]>((out, k) => {\n      const val = obj[k];\n      return out.concat(\n        Array.isArray(val)\n          ? val.map(v => [k, v]) // key has multiple values (array)\n          : ([[k, val]] as [string, string][]) // key has single value\n      );\n    }, [])\n    .sort(function ([keyA, valA], [keyB, valB]) {\n      // if keys are identical, sort on value\n      if (keyA === keyB) {\n        return valA < valB ? -1 : 1;\n      }\n\n      return keyA < keyB ? -1 : 1;\n    });\n}\n\n// for context summaries and avatars\nexport function removeFilterMaskedEntries<T extends Record<string, any>>(rawData: T): T {\n  const cleanedData: Record<string, any> = {};\n  for (const key of Object.getOwnPropertyNames(rawData)) {\n    if (rawData[key] !== FILTER_MASK) {\n      cleanedData[key] = rawData[key];\n    }\n  }\n  return cleanedData as T;\n}\n\nexport function formatAddress(address: number, imageAddressLength: number | undefined) {\n  return `0x${address.toString(16).padStart(imageAddressLength ?? 0, '0')}`;\n}\n\nexport function parseAddress(address?: string | null) {\n  if (!address) {\n    return 0;\n  }\n\n  try {\n    return parseInt(address, 16) || 0;\n  } catch (_e) {\n    return 0;\n  }\n}\n\nexport function getImageRange(image: Image) {\n  // The start address is normalized to a `0x` prefixed hex string. The event\n  // schema also allows ingesting plain numbers, but this is converted during\n  // ingestion.\n  const startAddress = parseAddress(image?.image_addr);\n\n  // The image size is normalized to a regular number. However, it can also be\n  // `null`, in which case we assume that it counts up to the next image.\n  const endAddress = startAddress + (image?.image_size || 0);\n\n  return [startAddress, endAddress];\n}\n\nexport function parseAssembly(assembly: string | null) {\n  let name: string | undefined;\n  let version: string | undefined;\n  let culture: string | undefined;\n  let publicKeyToken: string | undefined;\n\n  const pieces = assembly ? assembly.split(',') : [];\n\n  if (pieces.length === 4) {\n    name = pieces[0];\n    version = pieces[1].split('Version=')[1];\n    culture = pieces[2].split('Culture=')[1];\n    publicKeyToken = pieces[3].split('PublicKeyToken=')[1];\n  }\n\n  return {name, version, culture, publicKeyToken};\n}\n\nexport function stackTracePlatformIcon(platform: PlatformType, frames: Frame[]) {\n  const fileExtensions = uniq(\n    compact(frames.map(frame => getFileExtension(frame.filename ?? '')))\n  );\n\n  if (fileExtensions.length === 1) {\n    const newPlatform = fileExtensionToPlatform(fileExtensions[0]);\n\n    return newPlatform ?? platform;\n  }\n\n  return platform;\n}\n\nexport function isStacktraceNewestFirst() {\n  const user = ConfigStore.get('user');\n  // user may not be authenticated\n\n  if (!user) {\n    return true;\n  }\n\n  switch (user.options.stacktraceOrder) {\n    case 2:\n      return true;\n    case 1:\n      return false;\n    case -1:\n    default:\n      return true;\n  }\n}\n","import {Component} from 'react';\n\nimport HookStore from 'sentry/stores/hookStore';\nimport {HookName, Hooks} from 'sentry/types/hooks';\n\ntype Props<H extends HookName> = {\n  /**\n   * The name of the hook as listed in hookstore.add(hookName, callback)\n   */\n  name: H;\n  /**\n   * If children are provided as a function to the Hook, the hooks will be\n   * passed down as a render prop.\n   */\n  children?: (opts: {hooks: Array<Hooks[H]>}) => React.ReactNode;\n} & Omit<Parameters<Hooks[H]>[0], 'name'>;\n\ntype HookState<H extends HookName> = {\n  hooks: Array<Hooks[H]>;\n};\n\n/**\n * Instead of accessing the HookStore directly, use this.\n *\n * If the hook slot needs to perform anything w/ the hooks, you can pass a\n * function as a child and you will receive an object with a `hooks` key\n *\n * Example:\n *\n *   <Hook name=\"my-hook\">\n *     {({hooks}) => hooks.map(hook => (\n *       <Wrapper>{hook}</Wrapper>\n *     ))}\n *   </Hook>\n */\nfunction Hook<H extends HookName>({name, ...props}: Props<H>) {\n  class HookComponent extends Component<{}, HookState<H>> {\n    static displayName = `Hook(${name})`;\n\n    state = {\n      hooks: HookStore.get(name).map(cb => cb(props)),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    handleHooks(hookName: HookName, hooks: Array<Hooks[H]>) {\n      // Make sure that the incoming hook update matches this component's hook name\n      if (hookName !== name) {\n        return;\n      }\n\n      this.setState({hooks: hooks.map(cb => cb(props))});\n    }\n\n    unsubscribe = HookStore.listen(\n      (hookName: HookName, hooks: Array<Hooks[H]>) => this.handleHooks(hookName, hooks),\n      undefined\n    );\n\n    render() {\n      const {children} = props;\n\n      if (!this.state.hooks || !this.state.hooks.length) {\n        return null;\n      }\n\n      if (typeof children === 'function') {\n        return children({hooks: this.state.hooks});\n      }\n\n      return this.state.hooks;\n    }\n  }\n\n  return <HookComponent />;\n}\n\nexport default Hook;\n","import type {Fuse} from 'sentry/utils/fuzzySearch';\n\ntype Options = {\n  htmlString: string;\n  key: string;\n  markTags: {\n    highlightPostTag: string;\n    highlightPreTag: string;\n  };\n};\n\n/**\n * Parses the \"marked\" html strings into a {key, value, indices} (mimincing the\n * FuseResultMatch type) object, where the indices are a set of zero indexed\n * [start, end] indices for what should be highlighted.\n *\n * @param key The key of the field, this mimics the Fuse match object\n * @param htmlString The html string to parse\n * @param markTags.highlightPreTag The left tag\n * @param markTags.highlightPostTag The right tag\n */\nexport default function parseHtmlMarks({key, htmlString, markTags}: Options) {\n  const {highlightPreTag, highlightPostTag} = markTags;\n\n  const indices: [number, number][] = [];\n  let value = htmlString;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const openIndex = value.indexOf(highlightPreTag);\n    const openIndexEnd = openIndex + highlightPreTag.length;\n    if (openIndex === -1 || value.indexOf(highlightPostTag) === -1) {\n      break;\n    }\n    value = value.slice(0, openIndex) + value.slice(openIndexEnd);\n\n    const closeIndex = value.indexOf(highlightPostTag);\n    const closeIndexEnd = closeIndex + highlightPostTag.length;\n    value = value.slice(0, closeIndex) + value.slice(closeIndexEnd);\n\n    indices.push([openIndex, closeIndex - 1]);\n  }\n\n  return {key, value, indices} as Fuse.FuseResultMatch;\n}\n","import {Component} from 'react';\nimport {WithRouterProps} from 'react-router';\nimport {\n  Result as SearchResult,\n  SentryGlobalSearch,\n  standardSDKSlug,\n} from '@sentry-internal/global-search';\nimport dompurify from 'dompurify';\nimport debounce from 'lodash/debounce';\n\nimport {Organization, Project} from 'sentry/types';\nimport parseHtmlMarks from 'sentry/utils/parseHtmlMarks';\nimport withLatestContext from 'sentry/utils/withLatestContext';\n// eslint-disable-next-line no-restricted-imports\nimport withSentryRouter from 'sentry/utils/withSentryRouter';\n\nimport {ChildProps, Result, ResultItem} from './types';\n\ntype Props = WithRouterProps & {\n  /**\n   * Render function that renders the global search result\n   */\n  children: (props: ChildProps) => React.ReactNode;\n  organization: Organization;\n  /**\n   * Specific platforms to filter results to\n   */\n  platforms: string[];\n  project: Project;\n  /**\n   * The string to search the navigation routes for\n   */\n  query: string;\n};\n\ntype State = {\n  loading: boolean;\n  results: Result[];\n};\n\nconst MARK_TAGS = {\n  highlightPreTag: '<mark>',\n  highlightPostTag: '</mark>',\n};\n\nclass HelpSource extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    results: [],\n  };\n\n  componentDidMount() {\n    if (this.props.query !== undefined) {\n      this.doSearch(this.props.query);\n    }\n  }\n\n  componentDidUpdate(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.doSearch(nextProps.query);\n    }\n  }\n\n  search = new SentryGlobalSearch(['docs', 'help-center', 'develop', 'blog']);\n\n  async unbouncedSearch(query: string) {\n    this.setState({loading: true});\n    const {platforms = []} = this.props;\n\n    const searchResults = await this.search.query(query, {\n      platforms: platforms.map(platform => standardSDKSlug(platform)?.slug!),\n    });\n    const results = mapSearchResults(searchResults);\n\n    this.setState({loading: false, results});\n  }\n\n  doSearch = debounce(this.unbouncedSearch, 300);\n\n  render() {\n    return this.props.children({\n      isLoading: this.state.loading,\n      results: this.state.results,\n    });\n  }\n}\n\nfunction mapSearchResults(results: SearchResult[]) {\n  const items: Result[] = [];\n\n  results.forEach(section => {\n    const sectionItems = section.hits.map(hit => {\n      const title = parseHtmlMarks({\n        key: 'title',\n        htmlString: hit.title ?? '',\n        markTags: MARK_TAGS,\n      });\n      const description = parseHtmlMarks({\n        key: 'description',\n        htmlString: hit.text ?? '',\n        markTags: MARK_TAGS,\n      });\n\n      const item: ResultItem = {\n        ...hit,\n        sourceType: 'help',\n        resultType: `help-${hit.site}` as ResultItem['resultType'],\n        title: dompurify.sanitize(hit.title ?? ''),\n        extra: hit.context.context1,\n        description: hit.text ? dompurify.sanitize(hit.text) : undefined,\n        to: hit.url,\n      };\n\n      return {item, matches: [title, description], score: 1, refIndex: 0};\n    });\n\n    // The first element should indicate the section.\n    if (sectionItems.length > 0) {\n      sectionItems[0].item.sectionHeading = section.name;\n      sectionItems[0].item.sectionCount = sectionItems.length;\n\n      items.push(...sectionItems);\n      return;\n    }\n\n    // If we didn't have any results for this section mark it as empty\n    const emptyHeaderItem: ResultItem = {\n      sourceType: 'help',\n      resultType: `help-${section.site}` as ResultItem['resultType'],\n      title: `No results in ${section.name}`,\n      sectionHeading: section.name,\n      empty: true,\n    };\n\n    items.push({item: emptyHeaderItem, score: 1, refIndex: 0});\n  });\n\n  return items;\n}\n\nexport {HelpSource};\nexport default withLatestContext(withSentryRouter(HelpSource));\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Search} from 'sentry/components/search';\nimport SearchResult from 'sentry/components/search/searchResult';\nimport SearchResultWrapper from 'sentry/components/search/searchResultWrapper';\nimport HelpSource from 'sentry/components/search/sources/helpSource';\nimport {IconWindow} from 'sentry/icons';\nimport {t, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype ItemRenderer = React.ComponentProps<typeof Search>['renderItem'];\n\nconst renderResult: ItemRenderer = ({item, matches, itemProps, highlighted}) => {\n  const sectionHeading =\n    item.sectionHeading !== undefined ? (\n      <SectionHeading>\n        <IconWindow />\n        {t('From %s', item.sectionHeading)}\n        <Count>{tn('%s result', '%s results', item.sectionCount ?? 0)}</Count>\n      </SectionHeading>\n    ) : null;\n\n  if (item.empty) {\n    return (\n      <Fragment>\n        {sectionHeading}\n        <Empty>{t('No results from %s', item.sectionHeading)}</Empty>\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      {sectionHeading}\n      <SearchResultWrapper {...itemProps} highlighted={highlighted}>\n        <SearchResult highlighted={highlighted} item={item} matches={matches} />\n      </SearchResultWrapper>\n    </Fragment>\n  );\n};\n\ntype Props = Omit<\n  React.ComponentProps<typeof Search>,\n  'sources' | 'minSearch' | 'closeOnSelect' | 'renderItem'\n>;\n\n// TODO(ts): Type based on Search props once that has types\nconst HelpSearch = (props: Props) => (\n  <Search\n    {...props}\n    sources={[HelpSource]}\n    minSearch={3}\n    closeOnSelect={false}\n    renderItem={renderResult}\n  />\n);\n\nconst SectionHeading = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr max-content;\n  gap: ${space(1)};\n  align-items: center;\n  background: ${p => p.theme.backgroundSecondary};\n  padding: ${space(1)} ${space(2)};\n\n  &:not(:first-of-type) {\n    border-top: 1px solid ${p => p.theme.innerBorder};\n  }\n`;\n\nconst Count = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray300};\n`;\n\nconst Empty = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(2)};\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  border-top: 1px solid ${p => p.theme.innerBorder};\n`;\n\nexport default HelpSearch;\n","import {ClassNames, css, useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport HelpSearch from 'sentry/components/helpSearch';\nimport Hook from 'sentry/components/hook';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = ModalRenderProps & {\n  organization: Organization;\n  placeholder?: string;\n};\n\nfunction HelpSearchModal({\n  Body,\n  closeModal,\n  organization,\n  placeholder = t('Search for documentation, FAQs, blog posts...'),\n  ...props\n}: Props) {\n  const theme = useTheme();\n\n  return (\n    <Body>\n      <ClassNames>\n        {({css: injectedCss}) => (\n          <HelpSearch\n            {...props}\n            entryPoint=\"sidebar_help\"\n            dropdownClassName={injectedCss`\n                width: 100%;\n                border: transparent;\n                border-top-left-radius: 0;\n                border-top-right-radius: 0;\n                position: initial;\n                box-shadow: none;\n                border-top: 1px solid ${theme.border};\n              `}\n            renderInput={({getInputProps}) => (\n              <InputWrapper>\n                <Input autoFocus {...getInputProps({type: 'text', placeholder})} />\n              </InputWrapper>\n            )}\n            resultFooter={\n              <Hook name=\"help-modal:footer\" {...{organization, closeModal}} />\n            }\n          />\n        )}\n      </ClassNames>\n    </Body>\n  );\n}\n\nconst InputWrapper = styled('div')`\n  padding: ${space(0.25)};\n`;\n\nconst Input = styled('input')`\n  width: 100%;\n  padding: ${space(1)};\n  border: none;\n  border-radius: 8px;\n  outline: none;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const modalCss = css`\n  [role='document'] {\n    padding: 0;\n  }\n`;\n\nexport default withOrganization(HelpSearchModal);\n","import {JsonFormObject} from 'sentry/components/forms/types';\nimport {t} from 'sentry/locale';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: t('Add Secondary Emails'),\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: t('Additional Email'),\n        placeholder: t('e.g. secondary@example.com'),\n        help: t('Designate an alternative email for this account'),\n        saveOnBlur: false,\n        saveMessage: t('Add this new email address to your account?'),\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import ConfigStore from 'sentry/stores/configStore';\nimport {OnboardingTaskKey} from 'sentry/types';\n\nexport function extraQueryParameter(): URLSearchParams {\n  const extraQueryString = window.SandboxData?.extraQueryString || '';\n  const extraQuery = new URLSearchParams(extraQueryString);\n  return extraQuery;\n}\n\nexport function extraQueryParameterWithEmail(): URLSearchParams {\n  const params = extraQueryParameter();\n  const email = localStorage.getItem('email');\n  if (email) {\n    params.append('email', email);\n  }\n  return params;\n}\n\nexport function urlAttachQueryParams(url: string, params: URLSearchParams): string {\n  const queryString = params.toString();\n  if (queryString) {\n    return url + '?' + queryString;\n  }\n  return url;\n}\n\n// For the Sandbox, we are testing a new walkthrough. This affects a few different components of Sentry including the Onboarding Sidebar, Onboarding Tasks, the Demo End Modal, Demo Sign Up Modal, Guides, and more.\n// Outside of the Sandbox, this should have no effect on other elements of Sentry.\nexport function isDemoWalkthrough(): boolean {\n  return ConfigStore.get('demoMode');\n}\n\n// Function to determine which tour has completed depending on the guide that is being passed in.\nexport function getTourTask(\n  guide: string\n): {task: OnboardingTaskKey; tour: string} | undefined {\n  switch (guide) {\n    case 'sidebar_v2':\n      return {tour: 'tabs', task: OnboardingTaskKey.SIDEBAR_GUIDE};\n    case 'issues_v3':\n      return {tour: 'issues', task: OnboardingTaskKey.ISSUE_GUIDE};\n    case 'release-details_v2':\n      return {tour: 'releases', task: OnboardingTaskKey.RELEASE_GUIDE};\n    case 'transaction_details_v2':\n      return {tour: 'performance', task: OnboardingTaskKey.PERFORMANCE_GUIDE};\n    default:\n      return undefined;\n  }\n}\n","import {\n  BaseGroup,\n  EntryException,\n  EntryThreads,\n  EventMetadata,\n  EventOrGroupType,\n  GroupTombstone,\n  IssueCategory,\n  TreeLabelPart,\n} from 'sentry/types';\nimport {EntryType, Event} from 'sentry/types/event';\nimport {isMobilePlatform, isNativePlatform} from 'sentry/utils/platform';\n\nfunction isTombstone(maybe: BaseGroup | Event | GroupTombstone): maybe is GroupTombstone {\n  return !maybe.hasOwnProperty('type');\n}\n\n/**\n * Extract the display message from an event.\n */\nexport function getMessage(\n  event: Event | BaseGroup | GroupTombstone\n): string | undefined {\n  if (isTombstone(event)) {\n    return event.culprit || '';\n  }\n\n  const {metadata, type, culprit} = event;\n\n  switch (type) {\n    case EventOrGroupType.ERROR:\n    case EventOrGroupType.TRANSACTION:\n      return metadata.value;\n    case EventOrGroupType.CSP:\n      return metadata.message;\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      return '';\n    default:\n      return culprit || '';\n  }\n}\n\n/**\n * Get the location from an event.\n */\nexport function getLocation(event: Event | BaseGroup | GroupTombstone) {\n  if (isTombstone(event)) {\n    return undefined;\n  }\n\n  if (event.type === EventOrGroupType.ERROR && isNativePlatform(event.platform)) {\n    return event.metadata.filename || undefined;\n  }\n\n  return undefined;\n}\n\nexport function getTreeLabelPartDetails(part: TreeLabelPart) {\n  // Note: This function also exists in Python in eventtypes/base.py, to make\n  // porting efforts simpler it's recommended to keep both variants\n  // structurally similar.\n  if (typeof part === 'string') {\n    return part;\n  }\n\n  const label = part?.function || part?.package || part?.filebase || part?.type;\n  const classbase = part?.classbase;\n\n  if (classbase) {\n    return label ? `${classbase}.${label}` : classbase;\n  }\n\n  return label || '<unknown>';\n}\n\nfunction computeTitleWithTreeLabel(metadata: EventMetadata) {\n  const {type, current_tree_label, finest_tree_label} = metadata;\n\n  const treeLabel = current_tree_label || finest_tree_label;\n\n  const formattedTreeLabel = treeLabel\n    ? treeLabel.map(labelPart => getTreeLabelPartDetails(labelPart)).join(' | ')\n    : undefined;\n\n  if (!type) {\n    return {\n      title: formattedTreeLabel || metadata.function || '<unknown>',\n      treeLabel,\n    };\n  }\n\n  if (!formattedTreeLabel) {\n    return {title: type, treeLabel: undefined};\n  }\n\n  return {\n    title: `${type} | ${formattedTreeLabel}`,\n    treeLabel: [{type}, ...(treeLabel ?? [])],\n  };\n}\n\nexport function getTitle(\n  event: Event | BaseGroup,\n  features: string[] = [],\n  grouping = false\n) {\n  const {metadata, type, culprit, title} = event;\n\n  const customTitle =\n    features.includes('custom-event-title') && metadata?.title\n      ? metadata.title\n      : undefined;\n\n  switch (type) {\n    case EventOrGroupType.ERROR: {\n      if (customTitle) {\n        return {\n          title: customTitle,\n          subtitle: culprit,\n          treeLabel: undefined,\n        };\n      }\n\n      const displayTitleWithTreeLabel =\n        features.includes('grouping-title-ui') &&\n        (grouping ||\n          isNativePlatform(event.platform) ||\n          isMobilePlatform(event.platform));\n\n      if (displayTitleWithTreeLabel) {\n        return {\n          subtitle: culprit,\n          ...computeTitleWithTreeLabel(metadata),\n        };\n      }\n\n      return {\n        subtitle: culprit,\n        title: metadata.type || metadata.function || '<unknown>',\n        treeLabel: undefined,\n      };\n    }\n    case EventOrGroupType.CSP:\n      return {\n        title: customTitle ?? metadata.directive ?? '',\n        subtitle: metadata.uri ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      // Due to a regression some reports did not have message persisted\n      // (https://github.com/getsentry/sentry/pull/19794) so we need to fall\n      // back to the computed title for these.\n      return {\n        title: customTitle ?? (metadata.message || title),\n        subtitle: metadata.origin ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.DEFAULT:\n      return {\n        title: customTitle ?? metadata.title ?? '',\n        subtitle: '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.TRANSACTION:\n      const isPerfIssue = event.issueCategory === IssueCategory.PERFORMANCE;\n      return {\n        title: isPerfIssue ? metadata.title : customTitle ?? title,\n        subtitle: isPerfIssue ? culprit : '',\n        treeLabel: undefined,\n      };\n    default:\n      return {\n        title: customTitle ?? title,\n        subtitle: '',\n        treeLabel: undefined,\n      };\n  }\n}\n\n/**\n * Returns a short eventId with only 8 characters\n */\nexport function getShortEventId(eventId: string) {\n  return eventId.substring(0, 8);\n}\n\n/**\n * Returns a comma delineated list of errors\n */\nfunction getEventErrorString(event: Event) {\n  return event.errors?.map(error => error.type).join(',') || '';\n}\n\nfunction hasTrace(event: Event) {\n  if (event.type !== 'error') {\n    return false;\n  }\n  return !!event.contexts?.trace;\n}\n\n/**\n * Function to determine if an event has source maps\n */\nexport function eventHasSourceMaps(event: Event) {\n  return event.entries?.some(entry => {\n    return (\n      entry.type === EntryType.EXCEPTION &&\n      entry.data.values?.some(value => !!value.rawStacktrace && !!value.stacktrace)\n    );\n  });\n}\n\nfunction getExceptionEntries(event: Event) {\n  return event.entries?.filter(entry => entry.type === 'exception') as EntryException[];\n}\n\nfunction getNumberOfStackFrames(event: Event) {\n  const entries = getExceptionEntries(event);\n  // for each entry, go through each frame and get the max\n  const frameLengths =\n    entries?.map(entry =>\n      (entry.data.values || []).reduce((best, exception) => {\n        // find the max number of frames in this entry\n        const frameCount = exception.stacktrace?.frames?.length || 0;\n        return Math.max(best, frameCount);\n      }, 0)\n    ) || [];\n  if (!frameLengths.length) {\n    return 0;\n  }\n  return Math.max(...frameLengths);\n}\n\nfunction getNumberOfInAppStackFrames(event: Event) {\n  const entries = getExceptionEntries(event);\n  // for each entry, go through each frame\n  const frameLengths =\n    entries?.map(entry =>\n      (entry.data.values || []).reduce((best, exception) => {\n        // find the max number of frames in this entry\n        const frames = exception.stacktrace?.frames?.filter(f => f.inApp) || [];\n        return Math.max(best, frames.length);\n      }, 0)\n    ) || [];\n  if (!frameLengths.length) {\n    return 0;\n  }\n  return Math.max(...frameLengths);\n}\n\nfunction getNumberOfThreadsWithNames(event: Event) {\n  const threadLengths =\n    (\n      (event.entries?.filter(entry => entry.type === 'threads') || []) as EntryThreads[]\n    ).map(entry => entry.data?.values?.filter(thread => !!thread.name).length || 0) || [];\n  if (!threadLengths.length) {\n    return 0;\n  }\n  return Math.max(...threadLengths);\n}\n\nexport function getAnalyicsDataForEvent(event?: Event) {\n  return {\n    event_id: event?.eventID || '-1',\n    num_commits: event?.release?.commitCount || 0,\n    num_stack_frames: event ? getNumberOfStackFrames(event) : 0,\n    num_in_app_stack_frames: event ? getNumberOfInAppStackFrames(event) : 0,\n    num_threads_with_names: event ? getNumberOfThreadsWithNames(event) : 0,\n    event_platform: event?.platform,\n    event_type: event?.type,\n    has_release: !!event?.release,\n    has_source_maps: event ? eventHasSourceMaps(event) : false,\n    has_trace: event ? hasTrace(event) : false,\n    has_commit: !!event?.release?.lastCommit,\n    event_errors: event ? getEventErrorString(event) : '',\n    sdk_name: event?.sdk?.name,\n    sdk_version: event?.sdk?.version,\n    release_user_agent: event?.release?.userAgent,\n  };\n}\n","import {\n  backend,\n  desktop,\n  frontend,\n  mobile,\n  PlatformCategory,\n  PlatformKey,\n  serverless,\n} from 'sentry/data/platformCategories';\n\n/**\n *\n * @param platform - a SDK platform, for example `node-express`, `javascript-react`\n * @returns - the platform category, for example `backend`, `serverless`\n */\nexport function platformToCategory(platform: PlatformKey | undefined): PlatformCategory {\n  if (!platform) {\n    return PlatformCategory.OTHER;\n  }\n  if (([...frontend] as string[]).includes(platform)) {\n    return PlatformCategory.FRONTEND;\n  }\n  if (([...backend] as string[]).includes(platform)) {\n    return PlatformCategory.BACKEND;\n  }\n  if (([...serverless] as string[]).includes(platform)) {\n    return PlatformCategory.SERVERLESS;\n  }\n  if (([...mobile] as string[]).includes(platform)) {\n    return PlatformCategory.MOBILE;\n  }\n  if (([...desktop] as string[]).includes(platform)) {\n    return PlatformCategory.DESKTOP;\n  }\n  return PlatformCategory.OTHER;\n}\n\nexport function isNativePlatform(platform: string | undefined) {\n  switch (platform) {\n    case 'cocoa':\n    case 'objc':\n    case 'native':\n    case 'swift':\n    case 'c':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isMobilePlatform(platform: string | undefined) {\n  if (!platform) {\n    return false;\n  }\n\n  return ([...mobile] as string[]).includes(platform);\n}\n","import {useRouteContext} from 'sentry/utils/useRouteContext';\n\nfunction useRouter() {\n  const route = useRouteContext();\n  return route.router;\n}\n\nexport default useRouter;\n"],"names":["updateOnboardingTask","api","organization","updatedTask","requestPromise","slug","method","data","hasExistingTask","onboardingTasks","find","task","user","ConfigStore","map","OrganizationStore","escapeBashString","v","replace","getCurlCommand","result","defined","compressed","headers","h","indexOf","sort","a","b","header","inferredContentType","JSON","stringify","qs","isString","Object","keys","length","Sentry","scope","setExtra","Error","getFullUrl","fullUrl","url","query","queryObj","kv","key","value","Array","isArray","push","stringifyQueryList","fragment","removeFilterMaskedEntries","rawData","cleanedData","getOwnPropertyNames","FILTER_MASK","formatAddress","address","imageAddressLength","toString","padStart","parseAddress","parseInt","_e","getImageRange","image","startAddress","image_addr","image_size","parseAssembly","assembly","name","version","culture","publicKeyToken","pieces","split","stackTracePlatformIcon","platform","frames","fileExtensions","uniq","compact","frame","getFileExtension","filename","fileExtensionToPlatform","isStacktraceNewestFirst","options","stacktraceOrder","Hook","props","HookComponent","Component","hooks","HookStore","cb","hookName","this","handleHooks","undefined","componentWillUnmount","unsubscribe","setState","render","children","state","parseHtmlMarks","htmlString","markTags","highlightPreTag","highlightPostTag","indices","openIndex","openIndexEnd","slice","closeIndex","closeIndexEnd","MARK_TAGS","HelpSource","loading","results","SentryGlobalSearch","debounce","unbouncedSearch","componentDidMount","doSearch","componentDidUpdate","nextProps","async","platforms","items","forEach","section","sectionItems","hits","hit","title","description","text","item","sourceType","resultType","site","dompurify","extra","context","context1","to","matches","score","refIndex","sectionHeading","sectionCount","emptyHeaderItem","empty","mapSearchResults","search","standardSDKSlug","isLoading","withLatestContext","withSentryRouter","renderResult","itemProps","highlighted","SectionHeading","t","Count","tn","Fragment","Empty","HelpSearch","sources","minSearch","closeOnSelect","renderItem","space","p","theme","backgroundSecondary","innerBorder","fontSizeSmall","gray300","subText","fontSizeMedium","HelpSearchModal","Body","closeModal","placeholder","useTheme","css","injectedCss","entryPoint","dropdownClassName","border","renderInput","getInputProps","InputWrapper","Input","autoFocus","type","resultFooter","modalCss","withOrganization","route","fields","label","help","saveOnBlur","saveMessage","extraQueryParameter","extraQueryString","window","SandboxData","URLSearchParams","extraQueryParameterWithEmail","params","email","localStorage","getItem","append","urlAttachQueryParams","queryString","isDemoWalkthrough","getTourTask","guide","tour","OnboardingTaskKey","isTombstone","maybe","hasOwnProperty","getMessage","event","culprit","metadata","EventOrGroupType","message","getLocation","isNativePlatform","getTreeLabelPartDetails","part","function","package","filebase","classbase","computeTitleWithTreeLabel","current_tree_label","finest_tree_label","treeLabel","formattedTreeLabel","labelPart","join","getTitle","features","grouping","customTitle","includes","subtitle","isMobilePlatform","directive","uri","origin","isPerfIssue","issueCategory","IssueCategory","getShortEventId","eventId","substring","getEventErrorString","errors","error","hasTrace","contexts","trace","eventHasSourceMaps","entries","some","entry","EntryType","values","rawStacktrace","stacktrace","getExceptionEntries","filter","getNumberOfStackFrames","frameLengths","reduce","best","exception","frameCount","Math","max","getNumberOfInAppStackFrames","f","inApp","getNumberOfThreadsWithNames","threadLengths","thread","getAnalyicsDataForEvent","event_id","eventID","num_commits","release","commitCount","num_stack_frames","num_in_app_stack_frames","num_threads_with_names","event_platform","event_type","has_release","has_source_maps","has_trace","has_commit","lastCommit","event_errors","sdk_name","sdk","sdk_version","release_user_agent","userAgent","platformToCategory","frontend","PlatformCategory","backend","serverless","mobile","desktop","useRouteContext","router"],"sourceRoot":""}