{"version":3,"file":"chunks/app_views_settings_project_projectCreateServiceHook_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"0jBAUA,SAASA,EAAyB,GAAiB,IAAjB,OAACC,GAAc,EAC/C,MAAM,MAACC,EAAK,UAAEC,GAAaF,EACrBG,GAAQC,EAAAA,EAAAA,GAAE,uBAEhB,OACE,QAAC,IAAmB,CAACD,MAAOA,EAAM,UAChC,QAAC,EAAAE,SAAQ,YACP,QAAC,IAAkB,CAACF,MAAOA,KAC3B,QAAC,IAAuB,CACtBF,MAAOA,EACPC,UAAWA,EACXI,YAAa,CAACC,OAAQ,GAAIC,UAAU,SAK9C,CAhBST,EAAwB,uCAkBjC,S,0vBCfA,MAAMU,EAAgB,CAAC,cAAe,iBASvB,MAAMC,UAAgCC,EAAAA,UAAiB,kEAClD,KAChB,MAAM,MAACV,EAAK,UAAEC,GAAaU,KAAKC,MAChCC,EAAAA,eAAAA,MAAoBC,EAAAA,EAAAA,GAAc,aAAYd,cAAkBC,YAAoB,GACrF,CAEDc,SACE,MAAM,YAACV,EAAW,MAAEL,EAAK,UAAEC,EAAS,OAAEe,GAAUL,KAAKC,MAE/CK,EAAWD,EACZ,aAAYhB,KAASC,WAAmBe,KACxC,aAAYhB,KAASC,WAE1B,OACE,QAAC,KAAK,WACJ,QAAC,IAAO,CACNiB,UAAWF,EAAS,MAAQ,OAC5BG,YAAaF,EACbZ,YAAaA,EACbe,gBAAiBT,KAAKS,gBACtBC,YAAa,CACXC,UAAW,EACXC,aAAc,IAEhBC,YAAaR,GAASb,EAAAA,EAAAA,GAAE,iBAAkBA,EAAAA,EAAAA,GAAE,eAAe,WAE3D,QAAC,KAAW,WAAEA,EAAAA,EAAAA,GAAE,yBAChB,QAAC,IAAS,YACR,QAAC,IAAY,CAACsB,KAAK,WAAWC,OAAOvB,EAAAA,EAAAA,GAAE,aACvC,QAAC,IAAS,CACRsB,KAAK,MACLC,OAAOvB,EAAAA,EAAAA,GAAE,OACTwB,UAAQ,EACRC,MAAMzB,EAAAA,EAAAA,GAAE,yCAEV,QAAC,IAAS,CACRsB,KAAK,SACLC,OAAOvB,EAAAA,EAAAA,GAAE,UACT0B,QAAQ,EACRD,MAAMzB,EAAAA,EAAAA,GAAE,6CAA6C,SAEpD,QAAC,KAACsB,EAAI,MAAEK,EAAK,SAAEC,GAAS,SACvB,QAAC,IAAgB,CAACA,SAAUA,EAAUD,MAAOA,EAAOL,KAAMA,EAAK,SAC5DjB,EAAcwB,KAAIC,IACjB,QAAC,SAAqB,CAAaH,MAAOG,EAAM,SAC7CA,GADyBA,MAIb,WAOjC,EAvDmBxB,EAAuB,qC","sources":["webpack:///./app/views/settings/project/projectCreateServiceHook.tsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport ServiceHookSettingsForm from 'sentry/views/settings/project/serviceHookSettingsForm';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\nfunction ProjectCreateServiceHook({params}: Props) {\n  const {orgId, projectId} = params;\n  const title = t('Create Service Hook');\n\n  return (\n    <SentryDocumentTitle title={title}>\n      <Fragment>\n        <SettingsPageHeader title={title} />\n        <ServiceHookSettingsForm\n          orgId={orgId}\n          projectId={projectId}\n          initialData={{events: [], isActive: true}}\n        />\n      </Fragment>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default ProjectCreateServiceHook;\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\n\nimport ApiForm from 'sentry/components/forms/apiForm';\nimport MultipleCheckbox from 'sentry/components/forms/controls/multipleCheckbox';\nimport BooleanField from 'sentry/components/forms/fields/booleanField';\nimport TextField from 'sentry/components/forms/fields/textField';\nimport FormField from 'sentry/components/forms/formField';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {ServiceHook} from 'sentry/types';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\nconst EVENT_CHOICES = ['event.alert', 'event.created'];\n\ntype Props = {\n  initialData: Partial<ServiceHook> & {isActive: boolean};\n  orgId: string;\n  projectId: string;\n  hookId?: string;\n};\n\nexport default class ServiceHookSettingsForm extends Component<Props> {\n  onSubmitSuccess = () => {\n    const {orgId, projectId} = this.props;\n    browserHistory.push(normalizeUrl(`/settings/${orgId}/projects/${projectId}/hooks/`));\n  };\n\n  render() {\n    const {initialData, orgId, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${orgId}/${projectId}/hooks/${hookId}/`\n      : `/projects/${orgId}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({name, value, onChange}) => (\n                <MultipleCheckbox onChange={onChange} value={value} name={name}>\n                  {EVENT_CHOICES.map(event => (\n                    <MultipleCheckbox.Item key={event} value={event}>\n                      {event}\n                    </MultipleCheckbox.Item>\n                  ))}\n                </MultipleCheckbox>\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  }\n}\n"],"names":["ProjectCreateServiceHook","params","orgId","projectId","title","t","Fragment","initialData","events","isActive","EVENT_CHOICES","ServiceHookSettingsForm","Component","this","props","browserHistory","normalizeUrl","render","hookId","endpoint","apiMethod","apiEndpoint","onSubmitSuccess","footerStyle","marginTop","paddingRight","submitLabel","name","label","required","help","inline","value","onChange","map","event"],"sourceRoot":""}