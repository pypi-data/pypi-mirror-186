[tool.poetry]
name = "pyworkon"
version = "0.1.3"
description = "Software Development Project Management Tool"
authors = ["Christian Assing <chris@ca-net.org>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/chassing/pyworkon"
repository = "https://github.com/chassing/pyworkon"
classifiers = [
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/chassing/pyworkon/issues"

[tool.poetry.dependencies]
python = ">=3.10.0,<4.0.0"
prompt-toolkit = "^3.0.28"
rich = "^13.1.0"
pydantic = "^1.10.0"
PyYAML = "^6.0"
asgiref = "^3.5.0"
httpx = ">0.23.0"
uplink-httpx = "^2.0"
appdirs = "^1.4.4"
orm = { extras = ["sqlite"], version = "^0.3.1" }
python-nubia = "^0.2b5"
fuzzyfinder = "^2.1.0"
rich-click = "^1.6.0"
sqlalchemy = "^1.4.41,!=1.4.42"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
flake8 = "^4.0.1"
datamodel-code-generator = "^0.11.20"
mypy = "^0.942"

[tool.poetry.group.dev.dependencies]
types-pyyaml = "^6.0.12"
isort = "^5.11.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
pyworkon = 'pyworkon.__main__:run'

[tool.poetry.plugins."pipx.run"]
rich-cli = 'pyworkon.__main__:run'

[tool.black]
target-version = ['py310']
skip-string-normalization = false
line-length = 88

[tool.pyright]
reportMissingTypeStubs = true

[tool.mypy]
plugins = "pydantic.mypy"
enable_error_code = "truthy-bool, redundant-expr"
no_implicit_optional = true
check_untyped_defs = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "appdirs.*",
    "fuzzyfinder.*",
    "nubia.*",
    "orm.*",
    "pygments.token",
    "rich_click.*",
    "uplink.*",
    "uplink_httpx",
]
ignore_missing_imports = true

[tool.isort]
profile = "black"
multi_line_output = 3
force_grid_wrap = 2
float_to_top = true
