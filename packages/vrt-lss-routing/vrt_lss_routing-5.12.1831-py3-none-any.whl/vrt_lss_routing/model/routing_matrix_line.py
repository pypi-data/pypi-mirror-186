# coding: utf-8

"""
    VRt.Routing [RO]

    # Description  **VRt.Routing** is designed to find a route between locations and build time-distance matrices.  ## Features  * Getting the distance and time between two locations, including traffic jams * Finding a route between specified locations * Creating a time-distance matrix  ## Entity relationship diagram  ![erd](../uml/routing.svg)  # noqa: E501

    The version of the OpenAPI document: 5.12.1831
    Contact: servicedesk@veeroute.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from vrt_lss_routing import schemas  # noqa: F401


class RoutingMatrixLine(
    schemas.ListSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Values line in the route distances matrix (in meters) or in the route durations matrix (in seconds), between points.
    """


    class MetaOapg:
        unique_items = False
        max_items = 30001
        min_items = 2
        
        
        class items(
            schemas.Int64Schema
        ):
        
        
            class MetaOapg:
                format = 'int64'
                inclusive_maximum = 10000000
                inclusive_minimum = -1

    def __new__(
        cls,
        arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'RoutingMatrixLine':
        return super().__new__(
            cls,
            arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
