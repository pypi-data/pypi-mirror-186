[tool.isort]
profile = "black"
py_version=37
line_length=120
skip = ["chalk/feature_n/__init__.py"]

[tool.black]
target-version = ['py37']
line-length = 120

[tool.autoflake]
check = true
remove-duplicate-keys=true
remove-all-unused-imports=true
in-place=true

[tool.pytest.ini_options]
filterwarnings = [
    "error::sqlalchemy.exc.SADeprecationWarning",
    "error:.*coroutine was never awaited.*:RuntimeWarning",  # unawaited coroutines are logical errors
]
asyncio_mode = "auto"
env = [
    "CHALK_ALLOW_REGISTRY_UPDATES=1",
    "PYTHONASYNCIODEBUG=1",
    "SQLALCHEMY_WARN_20=1",
]
log_cli = true

[tool.pyright]
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
# strictParameterNoneValue
# enableTypeIgnoreComments
# reportMissingModuleSource
# reportMissingImports
# reportUndefinedVariable
# reportAssertAlwaysTrue
# reportInvalidStringEscapeSequence
reportInvalidTypeVarUse = "error"
reportSelfClsParameterName = "error"
reportUnsupportedDunderAll = "error"
reportUnusedExpression = "error"
reportWildcardImportFromLibrary = "error"
# reportGeneralTypeIssues
# reportOptionalSubscript
# reportOptionalMemberAccess
# reportOptionalCall
# reportOptionalIterable
# reportOptionalContextManager
# reportOptionalOperand
# reportTypedDictNotRequiredAccess
reportPrivateImportUsage = "none"
# reportUnboundVariable
# reportUnusedCoroutine
reportConstantRedefinition = "error"
reportDuplicateImport = "error"
reportFunctionMemberAccess = "error"
# reportImportCycles
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportIncompleteStub = "error"
reportInconsistentConstructor = "warning"
reportInvalidStubStatement = "error"
reportMatchNotExhaustive = "error"
reportMissingParameterType = "error"
# reportMissingTypeArgument
# reportOverlappingOverload
# reportPrivateUsage
reportTypeCommentUsage = "error"
# reportUnknownArgumentType
# reportUnknownLambdaType
# reportUnknownMemberType
# reportUnknownParameterType
# reportUnknownVariableType
reportUnnecessaryCast = "error"
reportUnnecessaryComparison = "warning"
reportUnnecessaryContains = "warning"
reportUnnecessaryIsInstance = "warning"
reportUnusedClass = "error"
reportUnusedImport = "error"
reportUnusedFunction = "error"
reportUnusedVariable = "error"
reportUntypedBaseClass = "error"
reportUntypedClassDecorator = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedNamedTuple = "error"
reportCallInDefaultInitializer = "error"
reportImplicitStringConcatenation = "error"
reportMissingSuperCall = "warning"
reportPropertyTypeMismatch = "warning"
reportUninitializedInstanceVariable = "none"
reportUnnecessaryTypeIgnoreComment = "error"
# reportUnusedCallResult
include=["**/chalk/chalk/**", "**/chalk/tests/**"]
exclude=["**/node_modules", "**/__pycache__", "**/.*", "**/chalk/feature_n/**"]
