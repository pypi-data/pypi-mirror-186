enabled: true
name: github
help: |
    The Github connector makes it easy to query data from Github
    about your users, orgs, and repos.
    Use: `myself` table to query current identity
    Use: `users` table to query Github users
    Use: `orgs` table to query Orgs accessible by the current identity
    Use: `repos` table to query the repos in an org. 
    Use: 'pulls' table to query information about pull requests.
base_url: https://api.github.com
paging:
  strategy: pageAndCount
  page_param: page
  count_param: per_page
  page_size: 100
pageIndexArg: page
pageMaxArg: per_page
dateParser: '%Y-%m-%dT%H:%M:%SZ'
auth:
  type: BASIC
  params:
    username: Github user email
    password: Github personal access token 
tables:
  - name: orgs
    resource_path: /user/orgs
    description: List of Github Organizations that the current user is a member of.
  - name: org_members
    resource_path: /orgs/{org}/members
    supports_paging: True
    params:
      org: sql@(select login from orgs)    
  - name: users
    resource_path: /users/{login}
    params:
      login: sql@(select login from org_members)
  - name: myself
    resource_path: /user
  - name: repos
    resource_path: /orgs/{org}/repos
    supports_paging: True
    params:
      type: all
      org: sql@(select login from orgs)
  - name: pulls
    query_resource: GET /repos/{owner}/{repo}/pulls
    supports_paging: True
    params:
      sort: created
      direction: desc
      state: all
      owner,repo: sql@(select owner_login, name from repos)
    select: id, url, html_url, node_id, number, state, locked, title, user, body, draft, created_at, 
            updated_at, head_repo_name, head_repo_id, head_label, head_ref, 
            base_repo_name, base_repo_id, base_label, base_ref,
            author_association
  - name: pull_reviews
    query_resource: GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews
    supports_paging: True
    params:
      owner,repo,pull_number: sql@(select user_login, head_repo_name, number from pulls)
  - name: deployments
    query_resource: GET /repos/{owner}/{repo}/deployments
    supports_paging: true
    params:
      owner,repo: sql@(select owner_login, name from repos)
    copy_params_to_output: [repo]
