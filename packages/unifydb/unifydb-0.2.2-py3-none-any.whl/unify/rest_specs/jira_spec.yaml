enabled: true
name: jira
base_url: https://tatari.atlassian.net
help: |
          The JIRA connector loads all JIRA issues and lets you query them easily.
          Use `issues` table to query issues.
          Use `resolutions` table to query the list of defined resolution states.
          Use `projects` table to query the set of JIRA projects.
paging:
  strategy: offsetAndCount
  offset_param: startAt
  count_param: maxResults
  page_size: 100
pageStartArg: startAt
pageMaxArg: maxResults
maxPerPage: 100
dateParser: bson
queryDateFormat: "%Y/%m/%d %H:%M"
# JIRA data changes. Let's use 4 hours
cacheTTLSecs: 144000
auth:
  type: BASIC
  params:
    username: JIRA user
    password: JIRA API token
tables:
  - name: issues
    query_resource: GET /rest/api/3/search
# This API: https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-search/#api-rest-api-3-search-get    
    supports_paging: True
    params:
      jql: created > 2021-07-28 order by created DESC
    refresh:
      strategy: updates
      params: 
        jql: "updated >= '${timestamp}' and created > 2022-07-28 order by created"
    result_body_path: issues
    select: "id, key, fields_project_id, fields_project_key, fields_summary, fields_reporter_.+, fields_assignee_.+, \n
    fields_status_.+, fields.created, fields.updated, fields_issuetype_name, fields_priority_name, \n
    fields_resolution_name"
    key_columns: id
    strip_prefixes: fields_
  - name: myself
    resource_path: /rest/api/3/myself
  - name: resolutions
    resource_path: /rest/api/3/resolution
  - name: projects
    resource_path: /rest/api/3/project/search
    result_body_path: values
    columns:
      - name: id
      - name: key
      - name: name
  - name: issue_keys
    query_resource: GET /rest/api/3/search
    supports_paging: True
    params:
      jql: order by created DESC
      fields: key
    # FIXME: convert to strategy
    #refresh_params:
    #  jql: updated >= '{checkpoint}'
    result_body_path: issues
    columns:
      - name: id
        type: VARCHAR
      - name: key
        key: true
# 'transitions' table extracts the transition history of all issues
  - name: test_transitions
    query_resource: GET /rest/api/3/search
    supports_paging: False
    params:
      jql: order by created DESC
      expand: changelog
    #refresh_params:
    #  jql: updated >= '{checkpoint}'
    result_body_path: issues
    columns:
      - name: id
        type: VARCHAR
      - name: key
        key: true
      - name: created
        source: changelog.histories.created
        type: TIMESTAMP
      - name: author_email
        source: changelog.histories.author.emailAddress
      - name: author_name
        source: changelog.histories.author.displayName
      - name: items
        source: changelog.histories.items
        type: JSON
