# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kaskada/prepare/v1alpha/slice.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n#kaskada/prepare/v1alpha/slice.proto\x12\x17kaskada.prepare.v1alpha\"\x9f\x02\n\x0cSliceRequest\x12N\n\x07percent\x18\x01 \x01(\x0b\x32\x32.kaskada.prepare.v1alpha.SliceRequest.PercentSliceH\x00R\x07percent\x12X\n\x0b\x65ntity_keys\x18\x02 \x01(\x0b\x32\x35.kaskada.prepare.v1alpha.SliceRequest.EntityKeysSliceH\x00R\nentityKeys\x1a(\n\x0cPercentSlice\x12\x18\n\x07percent\x18\x01 \x01(\x01R\x07percent\x1a\x32\n\x0f\x45ntityKeysSlice\x12\x1f\n\x0b\x65ntity_keys\x18\x02 \x03(\tR\nentityKeysB\x07\n\x05sliceB\xf6\x01\n\x1b\x63om.kaskada.prepare.v1alphaB\nSliceProtoP\x01ZMgitlab.com/kaskada/kaskada/wren/gen/go/kaskada/prepare/v1alpha;preparev1alpha\xa2\x02\x03KPX\xaa\x02\x17Kaskada.Prepare.V1alpha\xca\x02\x17Kaskada\\Prepare\\V1alpha\xe2\x02#Kaskada\\Prepare\\V1alpha\\GPBMetadata\xea\x02\x19Kaskada::Prepare::V1alphab\x06proto3')



_SLICEREQUEST = DESCRIPTOR.message_types_by_name['SliceRequest']
_SLICEREQUEST_PERCENTSLICE = _SLICEREQUEST.nested_types_by_name['PercentSlice']
_SLICEREQUEST_ENTITYKEYSSLICE = _SLICEREQUEST.nested_types_by_name['EntityKeysSlice']
SliceRequest = _reflection.GeneratedProtocolMessageType('SliceRequest', (_message.Message,), {

  'PercentSlice' : _reflection.GeneratedProtocolMessageType('PercentSlice', (_message.Message,), {
    'DESCRIPTOR' : _SLICEREQUEST_PERCENTSLICE,
    '__module__' : 'kaskada.prepare.v1alpha.slice_pb2'
    # @@protoc_insertion_point(class_scope:kaskada.prepare.v1alpha.SliceRequest.PercentSlice)
    })
  ,

  'EntityKeysSlice' : _reflection.GeneratedProtocolMessageType('EntityKeysSlice', (_message.Message,), {
    'DESCRIPTOR' : _SLICEREQUEST_ENTITYKEYSSLICE,
    '__module__' : 'kaskada.prepare.v1alpha.slice_pb2'
    # @@protoc_insertion_point(class_scope:kaskada.prepare.v1alpha.SliceRequest.EntityKeysSlice)
    })
  ,
  'DESCRIPTOR' : _SLICEREQUEST,
  '__module__' : 'kaskada.prepare.v1alpha.slice_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.prepare.v1alpha.SliceRequest)
  })
_sym_db.RegisterMessage(SliceRequest)
_sym_db.RegisterMessage(SliceRequest.PercentSlice)
_sym_db.RegisterMessage(SliceRequest.EntityKeysSlice)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\033com.kaskada.prepare.v1alphaB\nSliceProtoP\001ZMgitlab.com/kaskada/kaskada/wren/gen/go/kaskada/prepare/v1alpha;preparev1alpha\242\002\003KPX\252\002\027Kaskada.Prepare.V1alpha\312\002\027Kaskada\\Prepare\\V1alpha\342\002#Kaskada\\Prepare\\V1alpha\\GPBMetadata\352\002\031Kaskada::Prepare::V1alpha'
  _SLICEREQUEST._serialized_start=65
  _SLICEREQUEST._serialized_end=352
  _SLICEREQUEST_PERCENTSLICE._serialized_start=251
  _SLICEREQUEST_PERCENTSLICE._serialized_end=291
  _SLICEREQUEST_ENTITYKEYSSLICE._serialized_start=293
  _SLICEREQUEST_ENTITYKEYSSLICE._serialized_end=343
# @@protoc_insertion_point(module_scope)
