[build-system]
requires = [
    "pdm-pep517",
]
build-backend = "pdm.pep517.api"

[project]
name = "ClopHfit"
description = "Cli for fitting macromolecule pH titration or binding assays data e.g. fluorescence spectra."
authors = [
    { name = "daniele arosio", email = "daniele.arosio@cnr.it" },
]
license = "BSD-3-Clause"
readme = "docs/README.md"
requires-python = ">=3.8, <3.12"
version = "0.3.16"
keywords = [
    "svd",
    "ClopHensor",
    "data fitting",
    "pH",
    "macromolecule binding",
]
classifiers = [
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Unix Shell",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Development Status :: 3 - Alpha",
]
dependencies = [
    "rpy2 >=3.4.5",
    "seaborn >=0.11.2",
    "matplotlib >=3.2",
    "lmfit ==1.0.3",
    "numpy >=1.17,<1.24",
    "scipy >=1.7.1",
    "pandas >=1.3.3",
    "emcee >=3.1.1",
    "corner >=2.2.1",
    "tqdm >=4.62.3",
    "sympy >=1.9",
    "openpyxl >=3.0.9",
    "click >=8.1.3",
    "xlrd >=2.0.1",
]

[project.urls]
Homepage = "https://github.com/darosio/ClopHfit"
"Bug Tracker" = "https://github.com/darosio/ClopHfit/issues"
Discussions = "https://github.com/darosio/ClopHfit/discussions"
Changelog = "https://darosio.github.io/ClopHfit/misc/CHANGELOG.html"
"Github releases" = "https://github.com/darosio/ClopHfit/releases"
Documentation = "https://clophfit.readthedocs.io"

[project.scripts]
clop = "clophfit.__main__:clop"

[project.optional-dependencies]
tests = [
    "pytest >=7.0.1",
    "coverage[toml] >=6.1.2",
    "mypy >=0.931",
    "typeguard >=2.13.3",
    "Pygments >=2.10.0",
    "xdoctest >=0.15.10",
    "pandas-stubs >=1.5.0.221003",
]
dev = [
    "jupyter >=1.0.0",
    "ipykernel >=6.5.0",
    "ipython >=8.1.0",
    "commitizen>=2.38.0",
]
docs = [
    "Sphinx >=5.0",
    "pydata-sphinx-theme >=0.8.0",
    "sphinx-autodoc-typehints >=1.12.0",
    "nbsphinx >=0.8.8",
    "sphinxcontrib-plantuml >=0.23",
    "myst-parser >=0.18.0",
    "sphinx-click >=4.3.0",
    "autodocsumm >=0.2.9",
]

[tool.black]
line-length = 88
skip-string-normalization = false
exclude = "/(\n    \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | _build\n  | buck-out\n  | build\n  | dist\n)/\n"

[tool.coverage.paths]
source = [
    "src",
    "*/site-packages",
]
tests = [
    "tests",
    "*/tests",
]

[tool.coverage.run]
branch = true
source = [
    "clophfit",
    "tests",
]
omit = [
    "*__init__.py",
]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "pytest.raises",
    "pytest.warns",
]

[tool.isort]
profile = "black"
multi_line_output = 3
force_single_line = true
lines_after_imports = 2
known_first_party = "clophfit"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--showlocals",
    "--strict-markers",
    "--strict-config",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]
log_cli_level = "INFO"
testpaths = [
    "tests",
]

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
plugins = "numpy.typing.mypy_plugin"
exclude = "src/clophfit/old"
files = [
    "src",
    "tests",
    "docs/conf.py",
]
python_version = "3.10"
warn_unused_configs = true
enable_error_code = [
    "redundant-expr",
    "truthy-bool",
]

[tool.pylsp-mypy]
enabled = true
live_mode = true
dmypy = false
strict = true

[tool.commitizen]
name = "cz_customize"
version = "0.3.16"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "docs/conf.py:release",
    "docs/README.md:Version",
]

[tool.commitizen.customize]
message_template = "{{change_type}}:{% if show_message %} {{message}}{% endif %}"
example = "fix(parser): correct minor typos in code\n\nsee the issue for details on the typos fixed\n\ncloses issue #12\n"
schema = "<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n(BREAKING CHANGE: )<footer>\n"
schema_pattern = "^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert|bump)(?:\\(([^()\r\n]*)\\)|\\()?(!)?:\\s(.*)?"
bump_pattern = "^(BREAKING CHANGE|feat|fix|perf|refactor)"
change_type_order = [
    "BREAKING CHANGE",
    "Feat",
    "Fix",
    "Docs",
    "Style",
    "Perf",
    "Test",
    "Build",
    "CI/CD",
]
info_path = "cz_customize_info.txt"
commit_parser = "^(?P<change_type>feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(?:\\((?P<scope>[^()\r\n]*)\\)|\\()?(?P<breaking>!)?:\\s(?P<message>.*)?"
changelog_pattern = "^(feat|fix|docs|style|refactor|perf|test|build|ci)?(\\(.*\\))?(!)?"

[tool.commitizen.customize.bump_map]
"^.+!:" = "MAJOR"
"BREAKING CHANGE" = "MAJOR"
feat = "MINOR"
fix = "PATCH"
perf = "PATCH"
refactor = "PATCH"

[tool.commitizen.customize.change_type_map]
feat = "Feat"
fix = "Fix"
docs = "Docs"
build = "Build"
style = "Style"
refactor = "Refactor"
perf = "Perf"
test = "Test"
ci = "CI/CD"

[[tool.commitizen.customize.questions]]
type = "list"
name = "change_type"
message = "Select the type of change you are committing"

[[tool.commitizen.customize.questions.choices]]
value = "feat"
name = "feat: A new feature. Correlates with MINOR in SemVer"

[[tool.commitizen.customize.questions.choices]]
value = "fix"
name = "fix: A bug fix. Correlates with PATCH in SemVer"

[[tool.commitizen.customize.questions.choices]]
value = "perf"
name = "perf: A code change that improves performance. Correlates with PATCH in SemVer"

[[tool.commitizen.customize.questions.choices]]
value = "docs"
name = "docs: Documentation only changes"

[[tool.commitizen.customize.questions.choices]]
value = "style"
name = "style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"

[[tool.commitizen.customize.questions.choices]]
value = "refactor"
name = "refactor: A code change that neither fixes a bug nor adds a feature"

[[tool.commitizen.customize.questions.choices]]
value = "test"
name = "test: Adding missing or correcting existing tests"

[[tool.commitizen.customize.questions.choices]]
value = "build"
name = "build: Changes that update the build system, development tools or external dependencies"

[[tool.commitizen.customize.questions.choices]]
value = "ci"
name = "ci: Changes to our CI configuration files and scripts (example scopes: GitLabCI)"

[[tool.commitizen.customize.questions.choices]]
value = "revert"
name = "revert: Reverting to previous commit(s)."

[[tool.commitizen.customize.questions]]
type = "input"
name = "message"
message = "Body."

[[tool.commitizen.customize.questions]]
type = "confirm"
name = "show_message"
message = "Do you want to add body message in commit?"

[tool.pdm]

[tool.pylint.master]
py-version = "3.10"
ignore-paths = [
    "src/clophfit/_version.py",
    "src/clophfit/old",
]

[tool.pylint.reports]
output-format = "colorized"

[tool.pylint.similarities]
ignore-imports = "yes"

[tool.pylint.messages_control]
disable = [
    "invalid-name",
    "design",
    "line-too-long",
    "too-many-lines",
    "inconsistent-return-statements",
    "import-error",
    "fixme",
    "unnecessary-dunder-call",
]
