# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['deutschland',
 'deutschland.Bewerberboerse',
 'deutschland.Bewerberboerse.api',
 'deutschland.Bewerberboerse.apis',
 'deutschland.Bewerberboerse.model',
 'deutschland.Bewerberboerse.models']

package_data = \
{'': ['*']}

install_requires = \
['python-dateutil', 'urllib3>=1.25.3']

setup_kwargs = {
    'name': 'de-bewerberboerse',
    'version': '0.1.0',
    'description': 'Arbeitsagentur Bewerberbörse API',
    'long_description': '# Bewerberboerse\n\nEine der größten Datenbanken für Bewerbende in Deutschland durchsuchen. \n\nDie Authentifizierung funktioniert per OAuth 2 Client Credentials mit JWTs. Folgende Client-Credentials können dafür verwendet werden:\n\n**ClientID:** 919b0af7-6e5f-4542-a7f5-04268b8bae2e\n\n**ClientSecret:** 93fce94c-5be2-4dc8-b040-c62818a4b003\n\n**Achtung**: der generierte Token muss bei folgenden GET-requests an https://rest.arbeitsagentur.de/jobboerse/bewerbersuche-service/pc/v1/bewerber im header als \'OAuthAccessToken\' inkludiert werden.\n\n\nThis Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:\n\n- API version: 1.0.0\n- Package version: 0.1.0\n- Build package: org.openapitools.codegen.languages.PythonClientCodegen\nFor more information, please visit [https://github.com/AndreasFischer1985/bewerberboerse-api](https://github.com/AndreasFischer1985/bewerberboerse-api)\n\n## Requirements.\n\nPython >= 3.6\n\n## Installation & Usage\n### pip install\n\n```sh\npip install deutschland[Bewerberboerse]\n```\n\n### poetry install\n\n```sh\npoetry add deutschland -E Bewerberboerse\n```\n\n### Setuptools\n\nInstall via [Setuptools](http://pypi.python.org/pypi/setuptools).\n\n```sh\npython setup.py install --user\n```\n(or `sudo python setup.py install` to install the package for all users)\n\n## Usage\n\nImport the package:\n```python\nfrom deutschland import Bewerberboerse\n```\n\n## Getting Started\n\nPlease follow the [installation procedure](#installation--usage) and then run the following:\n\n```python\n\nimport time\nfrom deutschland import Bewerberboerse\nfrom pprint import pprint\nfrom deutschland.Bewerberboerse.api import default_api\n# Defining the host is optional and defaults to https://rest.arbeitsagentur.de/jobboerse/bewerbersuche-service\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = Bewerberboerse.Configuration(\n    host = "https://rest.arbeitsagentur.de/jobboerse/bewerbersuche-service"\n)\n\n\n\n# Enter a context with an instance of the API client\nwith Bewerberboerse.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = default_api.DefaultApi(api_client)\n    was = "Wissenschaftlicher Mitarbeiter" # str | Beruf, Kenntnisse, Sprachen, etc. (optional)\n    ausbildungsart = "au" # str | Ausbildungsart - au=Ausbildung, dsa=Duales Studium (ausbildungsintegrierend), dsp=Duales Studium (praxisintegrierend). (optional)\n    wo = "Feucht" # str | Ort, PLZ, Bundesland, Land, etc. (optional)\n    umkreis = 0 # int | Umkreis - 0=ganzer Ort; 10=10km; 15=15km; 20=20km; 50=50km; 100=100km; 200=200km. (optional)\n    angebotsart = "ar" # str | Angebotsart - ar=Arbeitskräfte; au=Auszubildende/Duales Studium; pt=Praktikanten/Trainees; se=Selbstständige. (optional)\n    arbeitszeit = "vz" # str | Arbeitszeit - vz=Vollzeit; tz=Teilzeit; snw=Schicht,Nacht,Wochenende; ht=Heim-/Telearbeit; mj=Minijob. (optional)\n    berufserfahrung = "mb" # str | Berufserfahrung - be=Berufseinsteiger*innen; mb=Mit Berufserfahrung. (optional)\n    vertragsart = "ub" # str | Vertragsart - be=Befristet; ub=Unbefristet. (optional)\n    behinderung = "an" # str | Behinderung - an=Nur Schwerbehinderte oder ihnen gleichgestellte Bewerber*innen anzeigen. (optional) (default to "an")\n    page = 0 # int | Ergebnissseite (optional)\n    size = 25 # int | Anzahl von Ergebnissen (optional)\n\n    try:\n        # Bewerberbörse\n        api_response = api_instance.bewerberboerse(was=was, ausbildungsart=ausbildungsart, wo=wo, umkreis=umkreis, angebotsart=angebotsart, arbeitszeit=arbeitszeit, berufserfahrung=berufserfahrung, vertragsart=vertragsart, behinderung=behinderung, page=page, size=size)\n        pprint(api_response)\n    except Bewerberboerse.ApiException as e:\n        print("Exception when calling DefaultApi->bewerberboerse: %s\\n" % e)\n```\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *https://rest.arbeitsagentur.de/jobboerse/bewerbersuche-service*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*DefaultApi* | [**bewerberboerse**](docs/DefaultApi.md#bewerberboerse) | **GET** /pc/v1/bewerber | Bewerberbörse\n*DefaultApi* | [**bewerberdetails**](docs/DefaultApi.md#bewerberdetails) | **GET** /pc/v1/bewerberdetails/{referenznummer} | \n\n\n## Documentation For Models\n\n\n\n## Documentation For Authorization\n\n\n## clientCredAuth\n\n- **Type**: OAuth\n- **Flow**: application\n- **Authorization URL**: \n- **Scopes**: N/A\n\n\n## Author\n\nandreasfischer1985@web.de\n\n\n## Notes for Large OpenAPI documents\nIf the OpenAPI document is large, imports in Bewerberboerse.apis and Bewerberboerse.models may fail with a\nRecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:\n\nSolution 1:\nUse specific imports for apis and models like:\n- `from deutschland.Bewerberboerse.api.default_api import DefaultApi`\n- `from deutschland.Bewerberboerse.model.pet import Pet`\n\nSolution 2:\nBefore importing the package, adjust the maximum recursion limit as shown below:\n```\nimport sys\nsys.setrecursionlimit(1500)\nfrom deutschland import Bewerberboerse\nfrom deutschland.Bewerberboerse.apis import *\nfrom deutschland.Bewerberboerse.models import *\n```\n\n',
    'author': 'BundesAPI',
    'author_email': 'kontakt@bund.dev',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://github.com/bundesAPI/bewerberboerse-api',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.6',
}


setup(**setup_kwargs)
