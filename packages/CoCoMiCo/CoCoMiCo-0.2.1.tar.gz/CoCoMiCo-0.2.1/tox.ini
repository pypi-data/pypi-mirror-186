[tox]
envlist =
    clean,
    check,
    {py38,py311}-{cover,nocov},
    report

[testenv]
basepython =

    py38: {env:TOXPYTHON:python3.8}
    {py38,docs,spell}: {env:TOXPYTHON:python3.8}
    py311: {env:TOXPYTHON:python3.11}
    {clean,check,report}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/test
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop =
	cover: true
	nocov: false
deps =
    pytest
    cover: pytest-cov
commands =
    nocov: {posargs:pytest --junitxml=toxtests.xml -vv test --ignore=cocomico}
    cover: {posargs:pytest --junitxml=toxtests.xml --cov . --cov-report=term-missing -vv src test}

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
commands =
    python setup.py check --strict --metadata
    check-manifest {toxinidir}
    flake8 src test setup.py
    isort --verbose --check-only --diff --recursive src test setup.py

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
deps =
    # -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b doctest docs dist/docs
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage xml
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[testenv:build]
basepython = python3
skip_install = true
deps =
    wheel
    setuptools
commands =
    # Deprecated! See PEP-621
    python setup.py -q sdist bdist_wheel

[testenv:sonar]
basepython = python3
skip_install = true
allowlist_externals = sonar-scanner
deps =
    pylint
commands =
	pylint --output-format=parseable --output=pylint-report.txt --exit-zero src test
    sonar-scanner -Dsonar.login={env:SONAR_AUTH_TOKEN:}
