# coding: utf-8

"""
    VRt.Studio [ST]

    Veeroute Studio API.  # Description  Server part of the studio.  ## Entity relationship diagram  ![erd](../uml/studio.svg)  # noqa: E501

    The version of the OpenAPI document: 5.12.1831
    Contact: servicedesk@veeroute.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from vrt_lss_studio import schemas  # noqa: F401


class TripStateFlag(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    [Flag of state](#section/Description/Trip-model) inside trip.

    """


    class MetaOapg:
        enum_value_to_name = {
            "AROUND_LOCATION": "AROUND_LOCATION",
            "INSIDE_LOCATION": "INSIDE_LOCATION",
            "INSIDE_LOCATION_WINDOW": "INSIDE_LOCATION_WINDOW",
            "INSIDE_WORKING_WINDOW": "INSIDE_WORKING_WINDOW",
            "INSIDE_EVENT_HARD_WINDOW": "INSIDE_EVENT_HARD_WINDOW",
            "INSIDE_EVENT_SOFT_WINDOW": "INSIDE_EVENT_SOFT_WINDOW",
            "ON_DEMAND": "ON_DEMAND",
            "WAITING": "WAITING",
            "RELOCATING": "RELOCATING",
            "BREAK": "BREAK",
        }
    
    @schemas.classproperty
    def AROUND_LOCATION(cls):
        return cls("AROUND_LOCATION")
    
    @schemas.classproperty
    def INSIDE_LOCATION(cls):
        return cls("INSIDE_LOCATION")
    
    @schemas.classproperty
    def INSIDE_LOCATION_WINDOW(cls):
        return cls("INSIDE_LOCATION_WINDOW")
    
    @schemas.classproperty
    def INSIDE_WORKING_WINDOW(cls):
        return cls("INSIDE_WORKING_WINDOW")
    
    @schemas.classproperty
    def INSIDE_EVENT_HARD_WINDOW(cls):
        return cls("INSIDE_EVENT_HARD_WINDOW")
    
    @schemas.classproperty
    def INSIDE_EVENT_SOFT_WINDOW(cls):
        return cls("INSIDE_EVENT_SOFT_WINDOW")
    
    @schemas.classproperty
    def ON_DEMAND(cls):
        return cls("ON_DEMAND")
    
    @schemas.classproperty
    def WAITING(cls):
        return cls("WAITING")
    
    @schemas.classproperty
    def RELOCATING(cls):
        return cls("RELOCATING")
    
    @schemas.classproperty
    def BREAK(cls):
        return cls("BREAK")
