# coding: utf-8

"""
    VRt.Agro [AG]

    Veeroute Agro API.  # Description  The service is designed to calculate the work plan of production facilities.  ## Objects overview  ![objects](../images/agro_objects.svg)  ## Entity relationship diagram  ![erd](../uml/agro.svg)  # noqa: E501

    The version of the OpenAPI document: 5.12.1831
    Contact: servicedesk@veeroute.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from vrt_lss_agro import schemas  # noqa: F401


class EntityType(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Entity type.
    """


    class MetaOapg:
        enum_value_to_name = {
            "TASK": "TASK",
            "SETTINGS": "SETTINGS",
            "CROP": "CROP",
            "FIELD": "FIELD",
            "ELEVATOR": "ELEVATOR",
            "FACTORY": "FACTORY",
            "MARKET": "MARKET",
            "STORAGE": "STORAGE",
            "SILO": "SILO",
            "BUNKER": "BUNKER",
            "DRYER": "DRYER",
            "GATE": "GATE",
            "CONSUMER": "CONSUMER",
            "LEFTOVER": "LEFTOVER",
            "FORECAST_ELEMENT": "FORECAST_ELEMENT",
        }
    
    @schemas.classproperty
    def TASK(cls):
        return cls("TASK")
    
    @schemas.classproperty
    def SETTINGS(cls):
        return cls("SETTINGS")
    
    @schemas.classproperty
    def CROP(cls):
        return cls("CROP")
    
    @schemas.classproperty
    def FIELD(cls):
        return cls("FIELD")
    
    @schemas.classproperty
    def ELEVATOR(cls):
        return cls("ELEVATOR")
    
    @schemas.classproperty
    def FACTORY(cls):
        return cls("FACTORY")
    
    @schemas.classproperty
    def MARKET(cls):
        return cls("MARKET")
    
    @schemas.classproperty
    def STORAGE(cls):
        return cls("STORAGE")
    
    @schemas.classproperty
    def SILO(cls):
        return cls("SILO")
    
    @schemas.classproperty
    def BUNKER(cls):
        return cls("BUNKER")
    
    @schemas.classproperty
    def DRYER(cls):
        return cls("DRYER")
    
    @schemas.classproperty
    def GATE(cls):
        return cls("GATE")
    
    @schemas.classproperty
    def CONSUMER(cls):
        return cls("CONSUMER")
    
    @schemas.classproperty
    def LEFTOVER(cls):
        return cls("LEFTOVER")
    
    @schemas.classproperty
    def FORECAST_ELEMENT(cls):
        return cls("FORECAST_ELEMENT")
