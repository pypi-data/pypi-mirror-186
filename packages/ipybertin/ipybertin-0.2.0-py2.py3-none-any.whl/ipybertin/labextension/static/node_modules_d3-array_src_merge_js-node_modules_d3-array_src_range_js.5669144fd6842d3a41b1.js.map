{"version":3,"file":"node_modules_d3-array_src_merge_js-node_modules_d3-array_src_range_js.5669144fd6842d3a41b1.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;;;;;;;;;;;;;;;ACRe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","sources":["webpack://ipybertin/./node_modules/d3-array/src/merge.js","webpack://ipybertin/./node_modules/d3-array/src/range.js"],"sourcesContent":["function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n"],"names":[],"sourceRoot":""}