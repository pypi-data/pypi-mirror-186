# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from fsai_grpc_api.protos import workflow_api_pb2 as fsai__grpc__api_dot_protos_dot_workflow__api__pb2


class WorkflowApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FindOrCreateWorkflow = channel.unary_unary(
                '/WorkflowApi/FindOrCreateWorkflow',
                request_serializer=fsai__grpc__api_dot_protos_dot_workflow__api__pb2.WorkflowRequest.SerializeToString,
                response_deserializer=fsai__grpc__api_dot_protos_dot_workflow__api__pb2.WorkflowResponse.FromString,
                )
        self.ExecuteWorkflow = channel.unary_unary(
                '/WorkflowApi/ExecuteWorkflow',
                request_serializer=fsai__grpc__api_dot_protos_dot_workflow__api__pb2.WorkflowRequest.SerializeToString,
                response_deserializer=fsai__grpc__api_dot_protos_dot_workflow__api__pb2.WorkflowResponse.FromString,
                )


class WorkflowApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FindOrCreateWorkflow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteWorkflow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkflowApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FindOrCreateWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.FindOrCreateWorkflow,
                    request_deserializer=fsai__grpc__api_dot_protos_dot_workflow__api__pb2.WorkflowRequest.FromString,
                    response_serializer=fsai__grpc__api_dot_protos_dot_workflow__api__pb2.WorkflowResponse.SerializeToString,
            ),
            'ExecuteWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteWorkflow,
                    request_deserializer=fsai__grpc__api_dot_protos_dot_workflow__api__pb2.WorkflowRequest.FromString,
                    response_serializer=fsai__grpc__api_dot_protos_dot_workflow__api__pb2.WorkflowResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'WorkflowApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WorkflowApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FindOrCreateWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WorkflowApi/FindOrCreateWorkflow',
            fsai__grpc__api_dot_protos_dot_workflow__api__pb2.WorkflowRequest.SerializeToString,
            fsai__grpc__api_dot_protos_dot_workflow__api__pb2.WorkflowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WorkflowApi/ExecuteWorkflow',
            fsai__grpc__api_dot_protos_dot_workflow__api__pb2.WorkflowRequest.SerializeToString,
            fsai__grpc__api_dot_protos_dot_workflow__api__pb2.WorkflowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
